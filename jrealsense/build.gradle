// Requires gradle 6.5
// gradle clean build

plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

sourceCompatibility = '11'
targetCompatibility = '11'

sourceSets {
    main {
        java {
            srcDirs += ["src/gen/java"]
        }
    }
}

jar { 
    manifest { 
        attributes 'Class-Path': configurations.compile.collect { it.getName() }.join(' ')
    }
}

java {
    modularity.inferModulePath = true
}

javadoc {
    options.noTimestamp = true;
    options.noQualifiers = ["all"];
    options.noTree = true;
    options.noIndex = true;
    options.noNavBar = true;
}

def packageDir = "$buildDir/package/${projectName}"
def releaseFileName = "${projectName}-${version}.zip"

ext.artifacts = fileTree(include: ['*'], dir: "$packageDir/libs")

task createRelease(type: Zip) {
    archiveFileName = "$releaseFileName"
    destinationDirectory = file("$projectDir/release")
    from file("$packageDir")
}

task copyLibs(type: Copy) {
    if (!new File("$projectDir/bld/librealsense2-jni.so").exists())
        throw new RuntimeException("No librealsense2-jni.so library found. Please build it first. See build.txt for more information.");
    from "bld/librealsense2-jni.so"
    from jar.archiveFile
    into "${packageDir}/libs"
}

task createPackage(type: Copy, dependsOn: copyLibs) {
    from "README.md"
    into packageDir
}

task cleanRelease(type: Delete) {
    delete "$packageDir"
    delete "$projectDir/release"
}

createRelease.dependsOn createPackage, javadoc
assemble.dependsOn createRelease
clean.dependsOn cleanRelease
