// Generated by jextract

package id.jrealsense.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class librealsense_1 {

    /**
     * {@snippet :
     * enum rs2_timestamp_domain.RS2_TIMESTAMP_DOMAIN_HARDWARE_CLOCK = 0;
     * }
     */
    public static int RS2_TIMESTAMP_DOMAIN_HARDWARE_CLOCK() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_timestamp_domain.RS2_TIMESTAMP_DOMAIN_SYSTEM_TIME = 1;
     * }
     */
    public static int RS2_TIMESTAMP_DOMAIN_SYSTEM_TIME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_timestamp_domain.RS2_TIMESTAMP_DOMAIN_GLOBAL_TIME = 2;
     * }
     */
    public static int RS2_TIMESTAMP_DOMAIN_GLOBAL_TIME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_timestamp_domain.RS2_TIMESTAMP_DOMAIN_COUNT = 3;
     * }
     */
    public static int RS2_TIMESTAMP_DOMAIN_COUNT() {
        return (int)3L;
    }
    public static MethodHandle rs2_timestamp_domain_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$2,"rs2_timestamp_domain_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_timestamp_domain_to_string(rs2_timestamp_domain info);
     * }
     */
    public static MemorySegment rs2_timestamp_domain_to_string(int info) {
        var mh$ = rs2_timestamp_domain_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_FRAME_COUNTER = 0;
     * }
     */
    public static int RS2_FRAME_METADATA_FRAME_COUNTER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_FRAME_TIMESTAMP = 1;
     * }
     */
    public static int RS2_FRAME_METADATA_FRAME_TIMESTAMP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_SENSOR_TIMESTAMP = 2;
     * }
     */
    public static int RS2_FRAME_METADATA_SENSOR_TIMESTAMP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_ACTUAL_EXPOSURE = 3;
     * }
     */
    public static int RS2_FRAME_METADATA_ACTUAL_EXPOSURE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_GAIN_LEVEL = 4;
     * }
     */
    public static int RS2_FRAME_METADATA_GAIN_LEVEL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_AUTO_EXPOSURE = 5;
     * }
     */
    public static int RS2_FRAME_METADATA_AUTO_EXPOSURE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_WHITE_BALANCE = 6;
     * }
     */
    public static int RS2_FRAME_METADATA_WHITE_BALANCE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_TIME_OF_ARRIVAL = 7;
     * }
     */
    public static int RS2_FRAME_METADATA_TIME_OF_ARRIVAL() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_TEMPERATURE = 8;
     * }
     */
    public static int RS2_FRAME_METADATA_TEMPERATURE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_BACKEND_TIMESTAMP = 9;
     * }
     */
    public static int RS2_FRAME_METADATA_BACKEND_TIMESTAMP() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_ACTUAL_FPS = 10;
     * }
     */
    public static int RS2_FRAME_METADATA_ACTUAL_FPS() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_FRAME_LASER_POWER = 11;
     * }
     */
    public static int RS2_FRAME_METADATA_FRAME_LASER_POWER() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_FRAME_LASER_POWER_MODE = 12;
     * }
     */
    public static int RS2_FRAME_METADATA_FRAME_LASER_POWER_MODE() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_EXPOSURE_PRIORITY = 13;
     * }
     */
    public static int RS2_FRAME_METADATA_EXPOSURE_PRIORITY() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_EXPOSURE_ROI_LEFT = 14;
     * }
     */
    public static int RS2_FRAME_METADATA_EXPOSURE_ROI_LEFT() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_EXPOSURE_ROI_RIGHT = 15;
     * }
     */
    public static int RS2_FRAME_METADATA_EXPOSURE_ROI_RIGHT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_EXPOSURE_ROI_TOP = 16;
     * }
     */
    public static int RS2_FRAME_METADATA_EXPOSURE_ROI_TOP() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_EXPOSURE_ROI_BOTTOM = 17;
     * }
     */
    public static int RS2_FRAME_METADATA_EXPOSURE_ROI_BOTTOM() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_BRIGHTNESS = 18;
     * }
     */
    public static int RS2_FRAME_METADATA_BRIGHTNESS() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_CONTRAST = 19;
     * }
     */
    public static int RS2_FRAME_METADATA_CONTRAST() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_SATURATION = 20;
     * }
     */
    public static int RS2_FRAME_METADATA_SATURATION() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_SHARPNESS = 21;
     * }
     */
    public static int RS2_FRAME_METADATA_SHARPNESS() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_AUTO_WHITE_BALANCE_TEMPERATURE = 22;
     * }
     */
    public static int RS2_FRAME_METADATA_AUTO_WHITE_BALANCE_TEMPERATURE() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_BACKLIGHT_COMPENSATION = 23;
     * }
     */
    public static int RS2_FRAME_METADATA_BACKLIGHT_COMPENSATION() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_HUE = 24;
     * }
     */
    public static int RS2_FRAME_METADATA_HUE() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_GAMMA = 25;
     * }
     */
    public static int RS2_FRAME_METADATA_GAMMA() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_MANUAL_WHITE_BALANCE = 26;
     * }
     */
    public static int RS2_FRAME_METADATA_MANUAL_WHITE_BALANCE() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_POWER_LINE_FREQUENCY = 27;
     * }
     */
    public static int RS2_FRAME_METADATA_POWER_LINE_FREQUENCY() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_LOW_LIGHT_COMPENSATION = 28;
     * }
     */
    public static int RS2_FRAME_METADATA_LOW_LIGHT_COMPENSATION() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_FRAME_EMITTER_MODE = 29;
     * }
     */
    public static int RS2_FRAME_METADATA_FRAME_EMITTER_MODE() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_FRAME_LED_POWER = 30;
     * }
     */
    public static int RS2_FRAME_METADATA_FRAME_LED_POWER() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_RAW_FRAME_SIZE = 31;
     * }
     */
    public static int RS2_FRAME_METADATA_RAW_FRAME_SIZE() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_GPIO_INPUT_DATA = 32;
     * }
     */
    public static int RS2_FRAME_METADATA_GPIO_INPUT_DATA() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_SEQUENCE_NAME = 33;
     * }
     */
    public static int RS2_FRAME_METADATA_SEQUENCE_NAME() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_SEQUENCE_ID = 34;
     * }
     */
    public static int RS2_FRAME_METADATA_SEQUENCE_ID() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_SEQUENCE_SIZE = 35;
     * }
     */
    public static int RS2_FRAME_METADATA_SEQUENCE_SIZE() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_TRIGGER = 36;
     * }
     */
    public static int RS2_FRAME_METADATA_TRIGGER() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_PRESET = 37;
     * }
     */
    public static int RS2_FRAME_METADATA_PRESET() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_INPUT_WIDTH = 38;
     * }
     */
    public static int RS2_FRAME_METADATA_INPUT_WIDTH() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_INPUT_HEIGHT = 39;
     * }
     */
    public static int RS2_FRAME_METADATA_INPUT_HEIGHT() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_SUB_PRESET_INFO = 40;
     * }
     */
    public static int RS2_FRAME_METADATA_SUB_PRESET_INFO() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_CALIB_INFO = 41;
     * }
     */
    public static int RS2_FRAME_METADATA_CALIB_INFO() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_CRC = 42;
     * }
     */
    public static int RS2_FRAME_METADATA_CRC() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum rs2_frame_metadata_value.RS2_FRAME_METADATA_COUNT = 43;
     * }
     */
    public static int RS2_FRAME_METADATA_COUNT() {
        return (int)43L;
    }
    public static MethodHandle rs2_frame_metadata_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$3,"rs2_frame_metadata_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_frame_metadata_to_string(rs2_frame_metadata_value metadata);
     * }
     */
    public static MemorySegment rs2_frame_metadata_to_string(int metadata) {
        var mh$ = rs2_frame_metadata_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(metadata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_frame_metadata_value_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$4,"rs2_frame_metadata_value_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_frame_metadata_value_to_string(rs2_frame_metadata_value metadata);
     * }
     */
    public static MemorySegment rs2_frame_metadata_value_to_string(int metadata) {
        var mh$ = rs2_frame_metadata_value_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(metadata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_calib_target_type.RS2_CALIB_TARGET_RECT_GAUSSIAN_DOT_VERTICES = 0;
     * }
     */
    public static int RS2_CALIB_TARGET_RECT_GAUSSIAN_DOT_VERTICES() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_calib_target_type.RS2_CALIB_TARGET_ROI_RECT_GAUSSIAN_DOT_VERTICES = 1;
     * }
     */
    public static int RS2_CALIB_TARGET_ROI_RECT_GAUSSIAN_DOT_VERTICES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_calib_target_type.RS2_CALIB_TARGET_POS_GAUSSIAN_DOT_VERTICES = 2;
     * }
     */
    public static int RS2_CALIB_TARGET_POS_GAUSSIAN_DOT_VERTICES() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_calib_target_type.RS2_CALIB_TARGET_COUNT = 3;
     * }
     */
    public static int RS2_CALIB_TARGET_COUNT() {
        return (int)3L;
    }
    public static MethodHandle rs2_calib_target_type_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$5,"rs2_calib_target_type_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_calib_target_type_to_string(rs2_calib_target_type type);
     * }
     */
    public static MemorySegment rs2_calib_target_type_to_string(int type) {
        var mh$ = rs2_calib_target_type_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_metadata$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$1,"rs2_get_frame_metadata");
    }
    /**
     * {@snippet :
     * rs2_metadata_type rs2_get_frame_metadata(const rs2_frame* frame, rs2_frame_metadata_value frame_metadata, rs2_error** error);
     * }
     */
    public static long rs2_get_frame_metadata(MemorySegment frame, int frame_metadata, MemorySegment error) {
        var mh$ = rs2_get_frame_metadata$MH();
        try {
            return (long)mh$.invokeExact(frame, frame_metadata, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_supports_frame_metadata$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$2,"rs2_supports_frame_metadata");
    }
    /**
     * {@snippet :
     * int rs2_supports_frame_metadata(const rs2_frame* frame, rs2_frame_metadata_value frame_metadata, rs2_error** error);
     * }
     */
    public static int rs2_supports_frame_metadata(MemorySegment frame, int frame_metadata, MemorySegment error) {
        var mh$ = rs2_supports_frame_metadata$MH();
        try {
            return (int)mh$.invokeExact(frame, frame_metadata, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_timestamp_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$3,"rs2_get_frame_timestamp_domain");
    }
    /**
     * {@snippet :
     * rs2_timestamp_domain rs2_get_frame_timestamp_domain(const rs2_frame* frameset, rs2_error** error);
     * }
     */
    public static int rs2_get_frame_timestamp_domain(MemorySegment frameset, MemorySegment error) {
        var mh$ = rs2_get_frame_timestamp_domain$MH();
        try {
            return (int)mh$.invokeExact(frameset, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_timestamp$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$4,"rs2_get_frame_timestamp");
    }
    /**
     * {@snippet :
     * rs2_time_t rs2_get_frame_timestamp(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static double rs2_get_frame_timestamp(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_timestamp$MH();
        try {
            return (double)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_sensor$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$5,"rs2_get_frame_sensor");
    }
    /**
     * {@snippet :
     * rs2_sensor* rs2_get_frame_sensor(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_frame_sensor(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_sensor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_number$MH() {
        return RuntimeHelper.requireNonNull(constants$128.const$1,"rs2_get_frame_number");
    }
    /**
     * {@snippet :
     * unsigned long long rs2_get_frame_number(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static long rs2_get_frame_number(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_number$MH();
        try {
            return (long)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_data_size$MH() {
        return RuntimeHelper.requireNonNull(constants$128.const$2,"rs2_get_frame_data_size");
    }
    /**
     * {@snippet :
     * int rs2_get_frame_data_size(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static int rs2_get_frame_data_size(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_data_size$MH();
        try {
            return (int)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_data$MH() {
        return RuntimeHelper.requireNonNull(constants$128.const$3,"rs2_get_frame_data");
    }
    /**
     * {@snippet :
     * void* rs2_get_frame_data(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_frame_data(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_width$MH() {
        return RuntimeHelper.requireNonNull(constants$128.const$4,"rs2_get_frame_width");
    }
    /**
     * {@snippet :
     * int rs2_get_frame_width(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static int rs2_get_frame_width(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_width$MH();
        try {
            return (int)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_height$MH() {
        return RuntimeHelper.requireNonNull(constants$128.const$5,"rs2_get_frame_height");
    }
    /**
     * {@snippet :
     * int rs2_get_frame_height(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static int rs2_get_frame_height(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_height$MH();
        try {
            return (int)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_depth_frame_get_units$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$0,"rs2_depth_frame_get_units");
    }
    /**
     * {@snippet :
     * float rs2_depth_frame_get_units(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static float rs2_depth_frame_get_units(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_depth_frame_get_units$MH();
        try {
            return (float)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_stride_in_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$1,"rs2_get_frame_stride_in_bytes");
    }
    /**
     * {@snippet :
     * int rs2_get_frame_stride_in_bytes(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static int rs2_get_frame_stride_in_bytes(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_stride_in_bytes$MH();
        try {
            return (int)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_bits_per_pixel$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$2,"rs2_get_frame_bits_per_pixel");
    }
    /**
     * {@snippet :
     * int rs2_get_frame_bits_per_pixel(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static int rs2_get_frame_bits_per_pixel(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_bits_per_pixel$MH();
        try {
            return (int)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_frame_add_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$3,"rs2_frame_add_ref");
    }
    /**
     * {@snippet :
     * void rs2_frame_add_ref(rs2_frame* frame, rs2_error** error);
     * }
     */
    public static void rs2_frame_add_ref(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_frame_add_ref$MH();
        try {
            mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_release_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$4,"rs2_release_frame");
    }
    /**
     * {@snippet :
     * void rs2_release_frame(rs2_frame* frame);
     * }
     */
    public static void rs2_release_frame(MemorySegment frame) {
        var mh$ = rs2_release_frame$MH();
        try {
            mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_keep_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$5,"rs2_keep_frame");
    }
    /**
     * {@snippet :
     * void rs2_keep_frame(rs2_frame* frame);
     * }
     */
    public static void rs2_keep_frame(MemorySegment frame) {
        var mh$ = rs2_keep_frame$MH();
        try {
            mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_vertices$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$0,"rs2_get_frame_vertices");
    }
    /**
     * {@snippet :
     * rs2_vertex* rs2_get_frame_vertices(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_frame_vertices(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_vertices$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_export_to_ply$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$1,"rs2_export_to_ply");
    }
    /**
     * {@snippet :
     * void rs2_export_to_ply(const rs2_frame* frame, char* fname, rs2_frame* texture, rs2_error** error);
     * }
     */
    public static void rs2_export_to_ply(MemorySegment frame, MemorySegment fname, MemorySegment texture, MemorySegment error) {
        var mh$ = rs2_export_to_ply$MH();
        try {
            mh$.invokeExact(frame, fname, texture, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_texture_coordinates$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$2,"rs2_get_frame_texture_coordinates");
    }
    /**
     * {@snippet :
     * rs2_pixel* rs2_get_frame_texture_coordinates(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_frame_texture_coordinates(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_texture_coordinates$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_points_count$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$3,"rs2_get_frame_points_count");
    }
    /**
     * {@snippet :
     * int rs2_get_frame_points_count(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static int rs2_get_frame_points_count(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_points_count$MH();
        try {
            return (int)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_frame_stream_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$4,"rs2_get_frame_stream_profile");
    }
    /**
     * {@snippet :
     * const rs2_stream_profile* rs2_get_frame_stream_profile(const rs2_frame* frame, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_frame_stream_profile(MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_get_frame_stream_profile$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_is_frame_extendable_to$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$5,"rs2_is_frame_extendable_to");
    }
    /**
     * {@snippet :
     * int rs2_is_frame_extendable_to(const rs2_frame* frame, rs2_extension extension_type, rs2_error** error);
     * }
     */
    public static int rs2_is_frame_extendable_to(MemorySegment frame, int extension_type, MemorySegment error) {
        var mh$ = rs2_is_frame_extendable_to$MH();
        try {
            return (int)mh$.invokeExact(frame, extension_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_allocate_synthetic_video_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$131.const$1,"rs2_allocate_synthetic_video_frame");
    }
    /**
     * {@snippet :
     * rs2_frame* rs2_allocate_synthetic_video_frame(rs2_source* source, const rs2_stream_profile* new_stream, rs2_frame* original, int new_bpp, int new_width, int new_height, int new_stride, rs2_extension frame_type, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_allocate_synthetic_video_frame(MemorySegment source, MemorySegment new_stream, MemorySegment original, int new_bpp, int new_width, int new_height, int new_stride, int frame_type, MemorySegment error) {
        var mh$ = rs2_allocate_synthetic_video_frame$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, new_stream, original, new_bpp, new_width, new_height, new_stride, frame_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_allocate_synthetic_motion_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$131.const$3,"rs2_allocate_synthetic_motion_frame");
    }
    /**
     * {@snippet :
     * rs2_frame* rs2_allocate_synthetic_motion_frame(rs2_source* source, const rs2_stream_profile* new_stream, rs2_frame* original, rs2_extension frame_type, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_allocate_synthetic_motion_frame(MemorySegment source, MemorySegment new_stream, MemorySegment original, int frame_type, MemorySegment error) {
        var mh$ = rs2_allocate_synthetic_motion_frame$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, new_stream, original, frame_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_allocate_points$MH() {
        return RuntimeHelper.requireNonNull(constants$131.const$4,"rs2_allocate_points");
    }
    /**
     * {@snippet :
     * rs2_frame* rs2_allocate_points(rs2_source* source, const rs2_stream_profile* new_stream, rs2_frame* original, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_allocate_points(MemorySegment source, MemorySegment new_stream, MemorySegment original, MemorySegment error) {
        var mh$ = rs2_allocate_points$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, new_stream, original, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_allocate_composite_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$131.const$5,"rs2_allocate_composite_frame");
    }
    /**
     * {@snippet :
     * rs2_frame* rs2_allocate_composite_frame(rs2_source* source, rs2_frame** frames, int count, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_allocate_composite_frame(MemorySegment source, MemorySegment frames, int count, MemorySegment error) {
        var mh$ = rs2_allocate_composite_frame$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, frames, count, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_extract_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$0,"rs2_extract_frame");
    }
    /**
     * {@snippet :
     * rs2_frame* rs2_extract_frame(rs2_frame* composite, int index, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_extract_frame(MemorySegment composite, int index, MemorySegment error) {
        var mh$ = rs2_extract_frame$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(composite, index, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_embedded_frames_count$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$1,"rs2_embedded_frames_count");
    }
    /**
     * {@snippet :
     * int rs2_embedded_frames_count(rs2_frame* composite, rs2_error** error);
     * }
     */
    public static int rs2_embedded_frames_count(MemorySegment composite, MemorySegment error) {
        var mh$ = rs2_embedded_frames_count$MH();
        try {
            return (int)mh$.invokeExact(composite, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_synthetic_frame_ready$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$2,"rs2_synthetic_frame_ready");
    }
    /**
     * {@snippet :
     * void rs2_synthetic_frame_ready(rs2_source* source, rs2_frame* frame, rs2_error** error);
     * }
     */
    public static void rs2_synthetic_frame_ready(MemorySegment source, MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_synthetic_frame_ready$MH();
        try {
            mh$.invokeExact(source, frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pose_frame_get_pose_data$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$3,"rs2_pose_frame_get_pose_data");
    }
    /**
     * {@snippet :
     * void rs2_pose_frame_get_pose_data(const rs2_frame* frame, rs2_pose* pose, rs2_error** error);
     * }
     */
    public static void rs2_pose_frame_get_pose_data(MemorySegment frame, MemorySegment pose, MemorySegment error) {
        var mh$ = rs2_pose_frame_get_pose_data$MH();
        try {
            mh$.invokeExact(frame, pose, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_extract_target_dimensions$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$5,"rs2_extract_target_dimensions");
    }
    /**
     * {@snippet :
     * void rs2_extract_target_dimensions(const rs2_frame* frame, rs2_calib_target_type calib_type, float* target_dims, unsigned int target_dims_size, rs2_error** error);
     * }
     */
    public static void rs2_extract_target_dimensions(MemorySegment frame, int calib_type, MemorySegment target_dims, int target_dims_size, MemorySegment error) {
        var mh$ = rs2_extract_target_dimensions$MH();
        try {
            mh$.invokeExact(frame, calib_type, target_dims, target_dims_size, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_BACKLIGHT_COMPENSATION = 0;
     * }
     */
    public static int RS2_OPTION_BACKLIGHT_COMPENSATION() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_BRIGHTNESS = 1;
     * }
     */
    public static int RS2_OPTION_BRIGHTNESS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_CONTRAST = 2;
     * }
     */
    public static int RS2_OPTION_CONTRAST() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_EXPOSURE = 3;
     * }
     */
    public static int RS2_OPTION_EXPOSURE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_GAIN = 4;
     * }
     */
    public static int RS2_OPTION_GAIN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_GAMMA = 5;
     * }
     */
    public static int RS2_OPTION_GAMMA() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_HUE = 6;
     * }
     */
    public static int RS2_OPTION_HUE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_SATURATION = 7;
     * }
     */
    public static int RS2_OPTION_SATURATION() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_SHARPNESS = 8;
     * }
     */
    public static int RS2_OPTION_SHARPNESS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_WHITE_BALANCE = 9;
     * }
     */
    public static int RS2_OPTION_WHITE_BALANCE() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_AUTO_EXPOSURE = 10;
     * }
     */
    public static int RS2_OPTION_ENABLE_AUTO_EXPOSURE() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_AUTO_WHITE_BALANCE = 11;
     * }
     */
    public static int RS2_OPTION_ENABLE_AUTO_WHITE_BALANCE() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_VISUAL_PRESET = 12;
     * }
     */
    public static int RS2_OPTION_VISUAL_PRESET() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_LASER_POWER = 13;
     * }
     */
    public static int RS2_OPTION_LASER_POWER() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ACCURACY = 14;
     * }
     */
    public static int RS2_OPTION_ACCURACY() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_MOTION_RANGE = 15;
     * }
     */
    public static int RS2_OPTION_MOTION_RANGE() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_FILTER_OPTION = 16;
     * }
     */
    public static int RS2_OPTION_FILTER_OPTION() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_CONFIDENCE_THRESHOLD = 17;
     * }
     */
    public static int RS2_OPTION_CONFIDENCE_THRESHOLD() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_EMITTER_ENABLED = 18;
     * }
     */
    public static int RS2_OPTION_EMITTER_ENABLED() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_FRAMES_QUEUE_SIZE = 19;
     * }
     */
    public static int RS2_OPTION_FRAMES_QUEUE_SIZE() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_TOTAL_FRAME_DROPS = 20;
     * }
     */
    public static int RS2_OPTION_TOTAL_FRAME_DROPS() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AUTO_EXPOSURE_MODE = 21;
     * }
     */
    public static int RS2_OPTION_AUTO_EXPOSURE_MODE() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_POWER_LINE_FREQUENCY = 22;
     * }
     */
    public static int RS2_OPTION_POWER_LINE_FREQUENCY() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ASIC_TEMPERATURE = 23;
     * }
     */
    public static int RS2_OPTION_ASIC_TEMPERATURE() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ERROR_POLLING_ENABLED = 24;
     * }
     */
    public static int RS2_OPTION_ERROR_POLLING_ENABLED() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_PROJECTOR_TEMPERATURE = 25;
     * }
     */
    public static int RS2_OPTION_PROJECTOR_TEMPERATURE() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_OUTPUT_TRIGGER_ENABLED = 26;
     * }
     */
    public static int RS2_OPTION_OUTPUT_TRIGGER_ENABLED() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_MOTION_MODULE_TEMPERATURE = 27;
     * }
     */
    public static int RS2_OPTION_MOTION_MODULE_TEMPERATURE() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_DEPTH_UNITS = 28;
     * }
     */
    public static int RS2_OPTION_DEPTH_UNITS() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_MOTION_CORRECTION = 29;
     * }
     */
    public static int RS2_OPTION_ENABLE_MOTION_CORRECTION() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AUTO_EXPOSURE_PRIORITY = 30;
     * }
     */
    public static int RS2_OPTION_AUTO_EXPOSURE_PRIORITY() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_COLOR_SCHEME = 31;
     * }
     */
    public static int RS2_OPTION_COLOR_SCHEME() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_HISTOGRAM_EQUALIZATION_ENABLED = 32;
     * }
     */
    public static int RS2_OPTION_HISTOGRAM_EQUALIZATION_ENABLED() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_MIN_DISTANCE = 33;
     * }
     */
    public static int RS2_OPTION_MIN_DISTANCE() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_MAX_DISTANCE = 34;
     * }
     */
    public static int RS2_OPTION_MAX_DISTANCE() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_TEXTURE_SOURCE = 35;
     * }
     */
    public static int RS2_OPTION_TEXTURE_SOURCE() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_FILTER_MAGNITUDE = 36;
     * }
     */
    public static int RS2_OPTION_FILTER_MAGNITUDE() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_FILTER_SMOOTH_ALPHA = 37;
     * }
     */
    public static int RS2_OPTION_FILTER_SMOOTH_ALPHA() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_FILTER_SMOOTH_DELTA = 38;
     * }
     */
    public static int RS2_OPTION_FILTER_SMOOTH_DELTA() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_HOLES_FILL = 39;
     * }
     */
    public static int RS2_OPTION_HOLES_FILL() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_STEREO_BASELINE = 40;
     * }
     */
    public static int RS2_OPTION_STEREO_BASELINE() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AUTO_EXPOSURE_CONVERGE_STEP = 41;
     * }
     */
    public static int RS2_OPTION_AUTO_EXPOSURE_CONVERGE_STEP() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_INTER_CAM_SYNC_MODE = 42;
     * }
     */
    public static int RS2_OPTION_INTER_CAM_SYNC_MODE() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_STREAM_FILTER = 43;
     * }
     */
    public static int RS2_OPTION_STREAM_FILTER() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_STREAM_FORMAT_FILTER = 44;
     * }
     */
    public static int RS2_OPTION_STREAM_FORMAT_FILTER() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_STREAM_INDEX_FILTER = 45;
     * }
     */
    public static int RS2_OPTION_STREAM_INDEX_FILTER() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_EMITTER_ON_OFF = 46;
     * }
     */
    public static int RS2_OPTION_EMITTER_ON_OFF() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ZERO_ORDER_POINT_X = 47;
     * }
     */
    public static int RS2_OPTION_ZERO_ORDER_POINT_X() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ZERO_ORDER_POINT_Y = 48;
     * }
     */
    public static int RS2_OPTION_ZERO_ORDER_POINT_Y() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_LLD_TEMPERATURE = 49;
     * }
     */
    public static int RS2_OPTION_LLD_TEMPERATURE() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_MC_TEMPERATURE = 50;
     * }
     */
    public static int RS2_OPTION_MC_TEMPERATURE() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_MA_TEMPERATURE = 51;
     * }
     */
    public static int RS2_OPTION_MA_TEMPERATURE() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_HARDWARE_PRESET = 52;
     * }
     */
    public static int RS2_OPTION_HARDWARE_PRESET() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_GLOBAL_TIME_ENABLED = 53;
     * }
     */
    public static int RS2_OPTION_GLOBAL_TIME_ENABLED() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_APD_TEMPERATURE = 54;
     * }
     */
    public static int RS2_OPTION_APD_TEMPERATURE() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_MAPPING = 55;
     * }
     */
    public static int RS2_OPTION_ENABLE_MAPPING() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_RELOCALIZATION = 56;
     * }
     */
    public static int RS2_OPTION_ENABLE_RELOCALIZATION() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_POSE_JUMPING = 57;
     * }
     */
    public static int RS2_OPTION_ENABLE_POSE_JUMPING() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_DYNAMIC_CALIBRATION = 58;
     * }
     */
    public static int RS2_OPTION_ENABLE_DYNAMIC_CALIBRATION() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_DEPTH_OFFSET = 59;
     * }
     */
    public static int RS2_OPTION_DEPTH_OFFSET() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_LED_POWER = 60;
     * }
     */
    public static int RS2_OPTION_LED_POWER() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ZERO_ORDER_ENABLED = 61;
     * }
     */
    public static int RS2_OPTION_ZERO_ORDER_ENABLED() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_MAP_PRESERVATION = 62;
     * }
     */
    public static int RS2_OPTION_ENABLE_MAP_PRESERVATION() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_FREEFALL_DETECTION_ENABLED = 63;
     * }
     */
    public static int RS2_OPTION_FREEFALL_DETECTION_ENABLED() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AVALANCHE_PHOTO_DIODE = 64;
     * }
     */
    public static int RS2_OPTION_AVALANCHE_PHOTO_DIODE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_POST_PROCESSING_SHARPENING = 65;
     * }
     */
    public static int RS2_OPTION_POST_PROCESSING_SHARPENING() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_PRE_PROCESSING_SHARPENING = 66;
     * }
     */
    public static int RS2_OPTION_PRE_PROCESSING_SHARPENING() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_NOISE_FILTERING = 67;
     * }
     */
    public static int RS2_OPTION_NOISE_FILTERING() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_INVALIDATION_BYPASS = 68;
     * }
     */
    public static int RS2_OPTION_INVALIDATION_BYPASS() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AMBIENT_LIGHT = 69;
     * }
     */
    public static int RS2_OPTION_AMBIENT_LIGHT() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_DIGITAL_GAIN = 69;
     * }
     */
    public static int RS2_OPTION_DIGITAL_GAIN() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_SENSOR_MODE = 70;
     * }
     */
    public static int RS2_OPTION_SENSOR_MODE() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_EMITTER_ALWAYS_ON = 71;
     * }
     */
    public static int RS2_OPTION_EMITTER_ALWAYS_ON() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_THERMAL_COMPENSATION = 72;
     * }
     */
    public static int RS2_OPTION_THERMAL_COMPENSATION() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_TRIGGER_CAMERA_ACCURACY_HEALTH = 73;
     * }
     */
    public static int RS2_OPTION_TRIGGER_CAMERA_ACCURACY_HEALTH() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_RESET_CAMERA_ACCURACY_HEALTH = 74;
     * }
     */
    public static int RS2_OPTION_RESET_CAMERA_ACCURACY_HEALTH() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_HOST_PERFORMANCE = 75;
     * }
     */
    public static int RS2_OPTION_HOST_PERFORMANCE() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_HDR_ENABLED = 76;
     * }
     */
    public static int RS2_OPTION_HDR_ENABLED() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_SEQUENCE_NAME = 77;
     * }
     */
    public static int RS2_OPTION_SEQUENCE_NAME() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_SEQUENCE_SIZE = 78;
     * }
     */
    public static int RS2_OPTION_SEQUENCE_SIZE() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_SEQUENCE_ID = 79;
     * }
     */
    public static int RS2_OPTION_SEQUENCE_ID() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_HUMIDITY_TEMPERATURE = 80;
     * }
     */
    public static int RS2_OPTION_HUMIDITY_TEMPERATURE() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_MAX_USABLE_RANGE = 81;
     * }
     */
    public static int RS2_OPTION_ENABLE_MAX_USABLE_RANGE() {
        return (int)81L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ALTERNATE_IR = 82;
     * }
     */
    public static int RS2_OPTION_ALTERNATE_IR() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_NOISE_ESTIMATION = 83;
     * }
     */
    public static int RS2_OPTION_NOISE_ESTIMATION() {
        return (int)83L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_ENABLE_IR_REFLECTIVITY = 84;
     * }
     */
    public static int RS2_OPTION_ENABLE_IR_REFLECTIVITY() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AUTO_EXPOSURE_LIMIT = 85;
     * }
     */
    public static int RS2_OPTION_AUTO_EXPOSURE_LIMIT() {
        return (int)85L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AUTO_GAIN_LIMIT = 86;
     * }
     */
    public static int RS2_OPTION_AUTO_GAIN_LIMIT() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AUTO_RX_SENSITIVITY = 87;
     * }
     */
    public static int RS2_OPTION_AUTO_RX_SENSITIVITY() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_TRANSMITTER_FREQUENCY = 88;
     * }
     */
    public static int RS2_OPTION_TRANSMITTER_FREQUENCY() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_VERTICAL_BINNING = 89;
     * }
     */
    public static int RS2_OPTION_VERTICAL_BINNING() {
        return (int)89L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_RECEIVER_SENSITIVITY = 90;
     * }
     */
    public static int RS2_OPTION_RECEIVER_SENSITIVITY() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AUTO_EXPOSURE_LIMIT_TOGGLE = 91;
     * }
     */
    public static int RS2_OPTION_AUTO_EXPOSURE_LIMIT_TOGGLE() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_AUTO_GAIN_LIMIT_TOGGLE = 92;
     * }
     */
    public static int RS2_OPTION_AUTO_GAIN_LIMIT_TOGGLE() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_EMITTER_FREQUENCY = 93;
     * }
     */
    public static int RS2_OPTION_EMITTER_FREQUENCY() {
        return (int)93L;
    }
    /**
     * {@snippet :
     * enum rs2_option.RS2_OPTION_COUNT = 94;
     * }
     */
    public static int RS2_OPTION_COUNT() {
        return (int)94L;
    }
    public static MethodHandle rs2_option_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$0,"rs2_option_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_option_to_string(rs2_option option);
     * }
     */
    public static MemorySegment rs2_option_to_string(int option) {
        var mh$ = rs2_option_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(option);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_SHORT_RANGE = 0;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_SHORT_RANGE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_LONG_RANGE = 1;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_LONG_RANGE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_BACKGROUND_SEGMENTATION = 2;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_BACKGROUND_SEGMENTATION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_GESTURE_RECOGNITION = 3;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_GESTURE_RECOGNITION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_OBJECT_SCANNING = 4;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_OBJECT_SCANNING() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_FACE_ANALYTICS = 5;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_FACE_ANALYTICS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_FACE_LOGIN = 6;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_FACE_LOGIN() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_GR_CURSOR = 7;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_GR_CURSOR() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_DEFAULT = 8;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_DEFAULT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_MID_RANGE = 9;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_MID_RANGE() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_IR_ONLY = 10;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_IR_ONLY() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum rs2_sr300_visual_preset.RS2_SR300_VISUAL_PRESET_COUNT = 11;
     * }
     */
    public static int RS2_SR300_VISUAL_PRESET_COUNT() {
        return (int)11L;
    }
    public static MethodHandle rs2_sr300_visual_preset_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$1,"rs2_sr300_visual_preset_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_sr300_visual_preset_to_string(rs2_sr300_visual_preset preset);
     * }
     */
    public static MemorySegment rs2_sr300_visual_preset_to_string(int preset) {
        var mh$ = rs2_sr300_visual_preset_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(preset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_rs400_visual_preset.RS2_RS400_VISUAL_PRESET_CUSTOM = 0;
     * }
     */
    public static int RS2_RS400_VISUAL_PRESET_CUSTOM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_rs400_visual_preset.RS2_RS400_VISUAL_PRESET_DEFAULT = 1;
     * }
     */
    public static int RS2_RS400_VISUAL_PRESET_DEFAULT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_rs400_visual_preset.RS2_RS400_VISUAL_PRESET_HAND = 2;
     * }
     */
    public static int RS2_RS400_VISUAL_PRESET_HAND() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_rs400_visual_preset.RS2_RS400_VISUAL_PRESET_HIGH_ACCURACY = 3;
     * }
     */
    public static int RS2_RS400_VISUAL_PRESET_HIGH_ACCURACY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum rs2_rs400_visual_preset.RS2_RS400_VISUAL_PRESET_HIGH_DENSITY = 4;
     * }
     */
    public static int RS2_RS400_VISUAL_PRESET_HIGH_DENSITY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum rs2_rs400_visual_preset.RS2_RS400_VISUAL_PRESET_MEDIUM_DENSITY = 5;
     * }
     */
    public static int RS2_RS400_VISUAL_PRESET_MEDIUM_DENSITY() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum rs2_rs400_visual_preset.RS2_RS400_VISUAL_PRESET_REMOVE_IR_PATTERN = 6;
     * }
     */
    public static int RS2_RS400_VISUAL_PRESET_REMOVE_IR_PATTERN() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum rs2_rs400_visual_preset.RS2_RS400_VISUAL_PRESET_COUNT = 7;
     * }
     */
    public static int RS2_RS400_VISUAL_PRESET_COUNT() {
        return (int)7L;
    }
    public static MethodHandle rs2_rs400_visual_preset_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$2,"rs2_rs400_visual_preset_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_rs400_visual_preset_to_string(rs2_rs400_visual_preset preset);
     * }
     */
    public static MemorySegment rs2_rs400_visual_preset_to_string(int preset) {
        var mh$ = rs2_rs400_visual_preset_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(preset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_l500_visual_preset.RS2_L500_VISUAL_PRESET_CUSTOM = 0;
     * }
     */
    public static int RS2_L500_VISUAL_PRESET_CUSTOM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_l500_visual_preset.RS2_L500_VISUAL_PRESET_DEFAULT = 1;
     * }
     */
    public static int RS2_L500_VISUAL_PRESET_DEFAULT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_l500_visual_preset.RS2_L500_VISUAL_PRESET_NO_AMBIENT = 2;
     * }
     */
    public static int RS2_L500_VISUAL_PRESET_NO_AMBIENT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_l500_visual_preset.RS2_L500_VISUAL_PRESET_LOW_AMBIENT = 3;
     * }
     */
    public static int RS2_L500_VISUAL_PRESET_LOW_AMBIENT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum rs2_l500_visual_preset.RS2_L500_VISUAL_PRESET_MAX_RANGE = 4;
     * }
     */
    public static int RS2_L500_VISUAL_PRESET_MAX_RANGE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum rs2_l500_visual_preset.RS2_L500_VISUAL_PRESET_SHORT_RANGE = 5;
     * }
     */
    public static int RS2_L500_VISUAL_PRESET_SHORT_RANGE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum rs2_l500_visual_preset.RS2_L500_VISUAL_PRESET_AUTOMATIC = 6;
     * }
     */
    public static int RS2_L500_VISUAL_PRESET_AUTOMATIC() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum rs2_l500_visual_preset.RS2_L500_VISUAL_PRESET_COUNT = 7;
     * }
     */
    public static int RS2_L500_VISUAL_PRESET_COUNT() {
        return (int)7L;
    }
    public static MethodHandle rs2_l500_visual_preset_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$3,"rs2_l500_visual_preset_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_l500_visual_preset_to_string(rs2_l500_visual_preset preset);
     * }
     */
    public static MemorySegment rs2_l500_visual_preset_to_string(int preset) {
        var mh$ = rs2_l500_visual_preset_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(preset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_sensor_mode.RS2_SENSOR_MODE_VGA = 0;
     * }
     */
    public static int RS2_SENSOR_MODE_VGA() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_sensor_mode.RS2_SENSOR_MODE_XGA = 1;
     * }
     */
    public static int RS2_SENSOR_MODE_XGA() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_sensor_mode.RS2_SENSOR_MODE_QVGA = 2;
     * }
     */
    public static int RS2_SENSOR_MODE_QVGA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_sensor_mode.RS2_SENSOR_MODE_COUNT = 3;
     * }
     */
    public static int RS2_SENSOR_MODE_COUNT() {
        return (int)3L;
    }
    public static MethodHandle rs2_sensor_mode_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$4,"rs2_sensor_mode_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_sensor_mode_to_string(rs2_sensor_mode preset);
     * }
     */
    public static MemorySegment rs2_sensor_mode_to_string(int preset) {
        var mh$ = rs2_sensor_mode_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(preset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_ambient_light.RS2_AMBIENT_LIGHT_NO_AMBIENT = 1;
     * }
     */
    public static int RS2_AMBIENT_LIGHT_NO_AMBIENT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_ambient_light.RS2_AMBIENT_LIGHT_LOW_AMBIENT = 2;
     * }
     */
    public static int RS2_AMBIENT_LIGHT_LOW_AMBIENT() {
        return (int)2L;
    }
    public static MethodHandle rs2_ambient_light_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$5,"rs2_ambient_light_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_ambient_light_to_string(rs2_ambient_light preset);
     * }
     */
    public static MemorySegment rs2_ambient_light_to_string(int preset) {
        var mh$ = rs2_ambient_light_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(preset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_digital_gain.RS2_DIGITAL_GAIN_AUTO = 0;
     * }
     */
    public static int RS2_DIGITAL_GAIN_AUTO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_digital_gain.RS2_DIGITAL_GAIN_HIGH = 1;
     * }
     */
    public static int RS2_DIGITAL_GAIN_HIGH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_digital_gain.RS2_DIGITAL_GAIN_LOW = 2;
     * }
     */
    public static int RS2_DIGITAL_GAIN_LOW() {
        return (int)2L;
    }
    public static MethodHandle rs2_digital_gain_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$0,"rs2_digital_gain_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_digital_gain_to_string(rs2_digital_gain preset);
     * }
     */
    public static MemorySegment rs2_digital_gain_to_string(int preset) {
        var mh$ = rs2_digital_gain_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(preset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_host_perf_mode.RS2_HOST_PERF_DEFAULT = 0;
     * }
     */
    public static int RS2_HOST_PERF_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_host_perf_mode.RS2_HOST_PERF_LOW = 1;
     * }
     */
    public static int RS2_HOST_PERF_LOW() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_host_perf_mode.RS2_HOST_PERF_HIGH = 2;
     * }
     */
    public static int RS2_HOST_PERF_HIGH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_host_perf_mode.RS2_HOST_PERF_COUNT = 3;
     * }
     */
    public static int RS2_HOST_PERF_COUNT() {
        return (int)3L;
    }
    public static MethodHandle rs2_host_perf_mode_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$1,"rs2_host_perf_mode_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_host_perf_mode_to_string(rs2_host_perf_mode perf);
     * }
     */
    public static MemorySegment rs2_host_perf_mode_to_string(int perf) {
        var mh$ = rs2_host_perf_mode_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(perf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_emitter_frequency_mode.RS2_EMITTER_FREQUENCY_57_KHZ = 0;
     * }
     */
    public static int RS2_EMITTER_FREQUENCY_57_KHZ() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_emitter_frequency_mode.RS2_EMITTER_FREQUENCY_91_KHZ = 1;
     * }
     */
    public static int RS2_EMITTER_FREQUENCY_91_KHZ() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_emitter_frequency_mode.RS2_EMITTER_FREQUENCY_COUNT = 2;
     * }
     */
    public static int RS2_EMITTER_FREQUENCY_COUNT() {
        return (int)2L;
    }
    public static MethodHandle rs2_emitter_frequency_mode_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$2,"rs2_emitter_frequency_mode_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_emitter_frequency_mode_to_string(rs2_emitter_frequency_mode mode);
     * }
     */
    public static MemorySegment rs2_emitter_frequency_mode_to_string(int mode) {
        var mh$ = rs2_emitter_frequency_mode_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_is_option_read_only$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$3,"rs2_is_option_read_only");
    }
    /**
     * {@snippet :
     * int rs2_is_option_read_only(const rs2_options* options, rs2_option option, rs2_error** error);
     * }
     */
    public static int rs2_is_option_read_only(MemorySegment options, int option, MemorySegment error) {
        var mh$ = rs2_is_option_read_only$MH();
        try {
            return (int)mh$.invokeExact(options, option, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_option$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$5,"rs2_get_option");
    }
    /**
     * {@snippet :
     * float rs2_get_option(const rs2_options* options, rs2_option option, rs2_error** error);
     * }
     */
    public static float rs2_get_option(MemorySegment options, int option, MemorySegment error) {
        var mh$ = rs2_get_option$MH();
        try {
            return (float)mh$.invokeExact(options, option, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_set_option$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$1,"rs2_set_option");
    }
    /**
     * {@snippet :
     * void rs2_set_option(const rs2_options* options, rs2_option option, float value, rs2_error** error);
     * }
     */
    public static void rs2_set_option(MemorySegment options, int option, float value, MemorySegment error) {
        var mh$ = rs2_set_option$MH();
        try {
            mh$.invokeExact(options, option, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_options_list$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$2,"rs2_get_options_list");
    }
    /**
     * {@snippet :
     * rs2_options_list* rs2_get_options_list(const rs2_options* options, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_options_list(MemorySegment options, MemorySegment error) {
        var mh$ = rs2_get_options_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(options, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_options_list_size$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$3,"rs2_get_options_list_size");
    }
    /**
     * {@snippet :
     * int rs2_get_options_list_size(const rs2_options_list* options, rs2_error** error);
     * }
     */
    public static int rs2_get_options_list_size(MemorySegment options, MemorySegment error) {
        var mh$ = rs2_get_options_list_size$MH();
        try {
            return (int)mh$.invokeExact(options, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_option_name$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$4,"rs2_get_option_name");
    }
    /**
     * {@snippet :
     * char* rs2_get_option_name(const rs2_options* options, rs2_option option, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_option_name(MemorySegment options, int option, MemorySegment error) {
        var mh$ = rs2_get_option_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(options, option, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_option_from_list$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$5,"rs2_get_option_from_list");
    }
    /**
     * {@snippet :
     * rs2_option rs2_get_option_from_list(const rs2_options_list* options, int i, rs2_error** error);
     * }
     */
    public static int rs2_get_option_from_list(MemorySegment options, int i, MemorySegment error) {
        var mh$ = rs2_get_option_from_list$MH();
        try {
            return (int)mh$.invokeExact(options, i, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_delete_options_list$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$0,"rs2_delete_options_list");
    }
    /**
     * {@snippet :
     * void rs2_delete_options_list(rs2_options_list* list);
     * }
     */
    public static void rs2_delete_options_list(MemorySegment list) {
        var mh$ = rs2_delete_options_list$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_supports_option$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$1,"rs2_supports_option");
    }
    /**
     * {@snippet :
     * int rs2_supports_option(const rs2_options* options, rs2_option option, rs2_error** error);
     * }
     */
    public static int rs2_supports_option(MemorySegment options, int option, MemorySegment error) {
        var mh$ = rs2_supports_option$MH();
        try {
            return (int)mh$.invokeExact(options, option, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_option_range$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$3,"rs2_get_option_range");
    }
    /**
     * {@snippet :
     * void rs2_get_option_range(const rs2_options* sensor, rs2_option option, float* min, float* max, float* step, float* def, rs2_error** error);
     * }
     */
    public static void rs2_get_option_range(MemorySegment sensor, int option, MemorySegment min, MemorySegment max, MemorySegment step, MemorySegment def, MemorySegment error) {
        var mh$ = rs2_get_option_range$MH();
        try {
            mh$.invokeExact(sensor, option, min, max, step, def, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_option_description$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$4,"rs2_get_option_description");
    }
    /**
     * {@snippet :
     * char* rs2_get_option_description(const rs2_options* options, rs2_option option, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_option_description(MemorySegment options, int option, MemorySegment error) {
        var mh$ = rs2_get_option_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(options, option, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_option_value_description$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$6,"rs2_get_option_value_description");
    }
    /**
     * {@snippet :
     * char* rs2_get_option_value_description(const rs2_options* options, rs2_option option, float value, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_option_value_description(MemorySegment options, int option, float value, MemorySegment error) {
        var mh$ = rs2_get_option_value_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(options, option, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_colorizer$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$0,"rs2_create_colorizer");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_colorizer(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_colorizer(MemorySegment error) {
        var mh$ = rs2_create_colorizer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_sync_processing_block$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$1,"rs2_create_sync_processing_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_sync_processing_block(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_sync_processing_block(MemorySegment error) {
        var mh$ = rs2_create_sync_processing_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_pointcloud$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$2,"rs2_create_pointcloud");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_pointcloud(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_pointcloud(MemorySegment error) {
        var mh$ = rs2_create_pointcloud$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_yuy_decoder$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$3,"rs2_create_yuy_decoder");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_yuy_decoder(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_yuy_decoder(MemorySegment error) {
        var mh$ = rs2_create_yuy_decoder$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_y411_decoder$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$4,"rs2_create_y411_decoder");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_y411_decoder(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_y411_decoder(MemorySegment error) {
        var mh$ = rs2_create_y411_decoder$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_threshold$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$5,"rs2_create_threshold");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_threshold(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_threshold(MemorySegment error) {
        var mh$ = rs2_create_threshold$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_units_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$0,"rs2_create_units_transform");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_units_transform(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_units_transform(MemorySegment error) {
        var mh$ = rs2_create_units_transform$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_processing_block$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$1,"rs2_create_processing_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_processing_block(rs2_frame_processor_callback* proc, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_processing_block(MemorySegment proc, MemorySegment error) {
        var mh$ = rs2_create_processing_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proc, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_processing_block_fptr$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$2,"rs2_create_processing_block_fptr");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_processing_block_fptr(rs2_frame_processor_callback_ptr proc, void* context, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_processing_block_fptr(MemorySegment proc, MemorySegment context, MemorySegment error) {
        var mh$ = rs2_create_processing_block_fptr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proc, context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_processing_block_register_simple_option$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$4,"rs2_processing_block_register_simple_option");
    }
    /**
     * {@snippet :
     * int rs2_processing_block_register_simple_option(rs2_processing_block* block, rs2_option option_id, float min, float max, float step, float def, rs2_error** error);
     * }
     */
    public static int rs2_processing_block_register_simple_option(MemorySegment block, int option_id, float min, float max, float step, float def, MemorySegment error) {
        var mh$ = rs2_processing_block_register_simple_option$MH();
        try {
            return (int)mh$.invokeExact(block, option_id, min, max, step, def, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_start_processing$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$5,"rs2_start_processing");
    }
    /**
     * {@snippet :
     * void rs2_start_processing(rs2_processing_block* block, rs2_frame_callback* on_frame, rs2_error** error);
     * }
     */
    public static void rs2_start_processing(MemorySegment block, MemorySegment on_frame, MemorySegment error) {
        var mh$ = rs2_start_processing$MH();
        try {
            mh$.invokeExact(block, on_frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_start_processing_fptr$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$0,"rs2_start_processing_fptr");
    }
    /**
     * {@snippet :
     * void rs2_start_processing_fptr(rs2_processing_block* block, rs2_frame_callback_ptr on_frame, void* user, rs2_error** error);
     * }
     */
    public static void rs2_start_processing_fptr(MemorySegment block, MemorySegment on_frame, MemorySegment user, MemorySegment error) {
        var mh$ = rs2_start_processing_fptr$MH();
        try {
            mh$.invokeExact(block, on_frame, user, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_start_processing_queue$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$1,"rs2_start_processing_queue");
    }
    /**
     * {@snippet :
     * void rs2_start_processing_queue(rs2_processing_block* block, rs2_frame_queue* queue, rs2_error** error);
     * }
     */
    public static void rs2_start_processing_queue(MemorySegment block, MemorySegment queue, MemorySegment error) {
        var mh$ = rs2_start_processing_queue$MH();
        try {
            mh$.invokeExact(block, queue, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_process_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$2,"rs2_process_frame");
    }
    /**
     * {@snippet :
     * void rs2_process_frame(rs2_processing_block* block, rs2_frame* frame, rs2_error** error);
     * }
     */
    public static void rs2_process_frame(MemorySegment block, MemorySegment frame, MemorySegment error) {
        var mh$ = rs2_process_frame$MH();
        try {
            mh$.invokeExact(block, frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_delete_processing_block$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$3,"rs2_delete_processing_block");
    }
    /**
     * {@snippet :
     * void rs2_delete_processing_block(rs2_processing_block* block);
     * }
     */
    public static void rs2_delete_processing_block(MemorySegment block) {
        var mh$ = rs2_delete_processing_block$MH();
        try {
            mh$.invokeExact(block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_frame_queue$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$4,"rs2_create_frame_queue");
    }
    /**
     * {@snippet :
     * rs2_frame_queue* rs2_create_frame_queue(int capacity, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_frame_queue(int capacity, MemorySegment error) {
        var mh$ = rs2_create_frame_queue$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(capacity, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_delete_frame_queue$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$5,"rs2_delete_frame_queue");
    }
    /**
     * {@snippet :
     * void rs2_delete_frame_queue(rs2_frame_queue* queue);
     * }
     */
    public static void rs2_delete_frame_queue(MemorySegment queue) {
        var mh$ = rs2_delete_frame_queue$MH();
        try {
            mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_frame_queue_size$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$0,"rs2_frame_queue_size");
    }
    /**
     * {@snippet :
     * int rs2_frame_queue_size(rs2_frame_queue* queue, rs2_error** error);
     * }
     */
    public static int rs2_frame_queue_size(MemorySegment queue, MemorySegment error) {
        var mh$ = rs2_frame_queue_size$MH();
        try {
            return (int)mh$.invokeExact(queue, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_wait_for_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$1,"rs2_wait_for_frame");
    }
    /**
     * {@snippet :
     * rs2_frame* rs2_wait_for_frame(rs2_frame_queue* queue, unsigned int timeout_ms, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_wait_for_frame(MemorySegment queue, int timeout_ms, MemorySegment error) {
        var mh$ = rs2_wait_for_frame$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(queue, timeout_ms, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_poll_for_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$2,"rs2_poll_for_frame");
    }
    /**
     * {@snippet :
     * int rs2_poll_for_frame(rs2_frame_queue* queue, rs2_frame** output_frame, rs2_error** error);
     * }
     */
    public static int rs2_poll_for_frame(MemorySegment queue, MemorySegment output_frame, MemorySegment error) {
        var mh$ = rs2_poll_for_frame$MH();
        try {
            return (int)mh$.invokeExact(queue, output_frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_try_wait_for_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$4,"rs2_try_wait_for_frame");
    }
    /**
     * {@snippet :
     * int rs2_try_wait_for_frame(rs2_frame_queue* queue, unsigned int timeout_ms, rs2_frame** output_frame, rs2_error** error);
     * }
     */
    public static int rs2_try_wait_for_frame(MemorySegment queue, int timeout_ms, MemorySegment output_frame, MemorySegment error) {
        var mh$ = rs2_try_wait_for_frame$MH();
        try {
            return (int)mh$.invokeExact(queue, timeout_ms, output_frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_enqueue_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$5,"rs2_enqueue_frame");
    }
    /**
     * {@snippet :
     * void rs2_enqueue_frame(rs2_frame* frame, void* queue);
     * }
     */
    public static void rs2_enqueue_frame(MemorySegment frame, MemorySegment queue) {
        var mh$ = rs2_enqueue_frame$MH();
        try {
            mh$.invokeExact(frame, queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_align$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$0,"rs2_create_align");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_align(rs2_stream align_to, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_align(int align_to, MemorySegment error) {
        var mh$ = rs2_create_align$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(align_to, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_decimation_filter_block$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$1,"rs2_create_decimation_filter_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_decimation_filter_block(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_decimation_filter_block(MemorySegment error) {
        var mh$ = rs2_create_decimation_filter_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_temporal_filter_block$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$2,"rs2_create_temporal_filter_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_temporal_filter_block(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_temporal_filter_block(MemorySegment error) {
        var mh$ = rs2_create_temporal_filter_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_spatial_filter_block$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$3,"rs2_create_spatial_filter_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_spatial_filter_block(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_spatial_filter_block(MemorySegment error) {
        var mh$ = rs2_create_spatial_filter_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_disparity_transform_block$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$5,"rs2_create_disparity_transform_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_disparity_transform_block(unsigned char transform_to_disparity, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_disparity_transform_block(byte transform_to_disparity, MemorySegment error) {
        var mh$ = rs2_create_disparity_transform_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(transform_to_disparity, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_hole_filling_filter_block$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$0,"rs2_create_hole_filling_filter_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_hole_filling_filter_block(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_hole_filling_filter_block(MemorySegment error) {
        var mh$ = rs2_create_hole_filling_filter_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_rates_printer_block$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$1,"rs2_create_rates_printer_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_rates_printer_block(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_rates_printer_block(MemorySegment error) {
        var mh$ = rs2_create_rates_printer_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_zero_order_invalidation_block$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$2,"rs2_create_zero_order_invalidation_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_zero_order_invalidation_block(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_zero_order_invalidation_block(MemorySegment error) {
        var mh$ = rs2_create_zero_order_invalidation_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_huffman_depth_decompress_block$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$3,"rs2_create_huffman_depth_decompress_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_huffman_depth_decompress_block(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_huffman_depth_decompress_block(MemorySegment error) {
        var mh$ = rs2_create_huffman_depth_decompress_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_hdr_merge_processing_block$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$4,"rs2_create_hdr_merge_processing_block");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_hdr_merge_processing_block(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_hdr_merge_processing_block(MemorySegment error) {
        var mh$ = rs2_create_hdr_merge_processing_block$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_sequence_id_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$5,"rs2_create_sequence_id_filter");
    }
    /**
     * {@snippet :
     * rs2_processing_block* rs2_create_sequence_id_filter(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_sequence_id_filter(MemorySegment error) {
        var mh$ = rs2_create_sequence_id_filter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_processing_block_info$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$0,"rs2_get_processing_block_info");
    }
    /**
     * {@snippet :
     * char* rs2_get_processing_block_info(const rs2_processing_block* block, rs2_camera_info info, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_processing_block_info(MemorySegment block, int info, MemorySegment error) {
        var mh$ = rs2_get_processing_block_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(block, info, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_supports_processing_block_info$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$1,"rs2_supports_processing_block_info");
    }
    /**
     * {@snippet :
     * int rs2_supports_processing_block_info(const rs2_processing_block* block, rs2_camera_info info, rs2_error** error);
     * }
     */
    public static int rs2_supports_processing_block_info(MemorySegment block, int info, MemorySegment error) {
        var mh$ = rs2_supports_processing_block_info$MH();
        try {
            return (int)mh$.invokeExact(block, info, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_is_processing_block_extendable_to$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$2,"rs2_is_processing_block_extendable_to");
    }
    /**
     * {@snippet :
     * int rs2_is_processing_block_extendable_to(const rs2_processing_block* block, rs2_extension extension_type, rs2_error** error);
     * }
     */
    public static int rs2_is_processing_block_extendable_to(MemorySegment block, int extension_type, MemorySegment error) {
        var mh$ = rs2_is_processing_block_extendable_to$MH();
        try {
            return (int)mh$.invokeExact(block, extension_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum rs2_playback_status.RS2_PLAYBACK_STATUS_UNKNOWN = 0;
     * }
     */
    public static int RS2_PLAYBACK_STATUS_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum rs2_playback_status.RS2_PLAYBACK_STATUS_PLAYING = 1;
     * }
     */
    public static int RS2_PLAYBACK_STATUS_PLAYING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum rs2_playback_status.RS2_PLAYBACK_STATUS_PAUSED = 2;
     * }
     */
    public static int RS2_PLAYBACK_STATUS_PAUSED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum rs2_playback_status.RS2_PLAYBACK_STATUS_STOPPED = 3;
     * }
     */
    public static int RS2_PLAYBACK_STATUS_STOPPED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum rs2_playback_status.RS2_PLAYBACK_STATUS_COUNT = 4;
     * }
     */
    public static int RS2_PLAYBACK_STATUS_COUNT() {
        return (int)4L;
    }
    public static MethodHandle rs2_playback_status_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$3,"rs2_playback_status_to_string");
    }
    /**
     * {@snippet :
     * char* rs2_playback_status_to_string(rs2_playback_status status);
     * }
     */
    public static MemorySegment rs2_playback_status_to_string(int status) {
        var mh$ = rs2_playback_status_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_record_device$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$0,"rs2_create_record_device");
    }
    /**
     * {@snippet :
     * rs2_device* rs2_create_record_device(const rs2_device* device, char* file, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_record_device(MemorySegment device, MemorySegment file, MemorySegment error) {
        var mh$ = rs2_create_record_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_record_device_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$1,"rs2_create_record_device_ex");
    }
    /**
     * {@snippet :
     * rs2_device* rs2_create_record_device_ex(const rs2_device* device, char* file, int compression_enabled, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_record_device_ex(MemorySegment device, MemorySegment file, int compression_enabled, MemorySegment error) {
        var mh$ = rs2_create_record_device_ex$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device, file, compression_enabled, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_record_device_pause$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$2,"rs2_record_device_pause");
    }
    /**
     * {@snippet :
     * void rs2_record_device_pause(const rs2_device* device, rs2_error** error);
     * }
     */
    public static void rs2_record_device_pause(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_record_device_pause$MH();
        try {
            mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_record_device_resume$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$3,"rs2_record_device_resume");
    }
    /**
     * {@snippet :
     * void rs2_record_device_resume(const rs2_device* device, rs2_error** error);
     * }
     */
    public static void rs2_record_device_resume(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_record_device_resume$MH();
        try {
            mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_record_device_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$4,"rs2_record_device_filename");
    }
    /**
     * {@snippet :
     * char* rs2_record_device_filename(const rs2_device* device, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_record_device_filename(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_record_device_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_playback_device$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$5,"rs2_create_playback_device");
    }
    /**
     * {@snippet :
     * rs2_device* rs2_create_playback_device(char* file, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_playback_device(MemorySegment file, MemorySegment error) {
        var mh$ = rs2_create_playback_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_device_get_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$0,"rs2_playback_device_get_file_path");
    }
    /**
     * {@snippet :
     * char* rs2_playback_device_get_file_path(const rs2_device* device, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_playback_device_get_file_path(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_playback_device_get_file_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_get_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$1,"rs2_playback_get_duration");
    }
    /**
     * {@snippet :
     * unsigned long long rs2_playback_get_duration(const rs2_device* device, rs2_error** error);
     * }
     */
    public static long rs2_playback_get_duration(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_playback_get_duration$MH();
        try {
            return (long)mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$3,"rs2_playback_seek");
    }
    /**
     * {@snippet :
     * void rs2_playback_seek(const rs2_device* device, long long time, rs2_error** error);
     * }
     */
    public static void rs2_playback_seek(MemorySegment device, long time, MemorySegment error) {
        var mh$ = rs2_playback_seek$MH();
        try {
            mh$.invokeExact(device, time, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$4,"rs2_playback_get_position");
    }
    /**
     * {@snippet :
     * unsigned long long rs2_playback_get_position(const rs2_device* device, rs2_error** error);
     * }
     */
    public static long rs2_playback_get_position(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_playback_get_position$MH();
        try {
            return (long)mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_device_resume$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$5,"rs2_playback_device_resume");
    }
    /**
     * {@snippet :
     * void rs2_playback_device_resume(const rs2_device* device, rs2_error** error);
     * }
     */
    public static void rs2_playback_device_resume(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_playback_device_resume$MH();
        try {
            mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_device_pause$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$0,"rs2_playback_device_pause");
    }
    /**
     * {@snippet :
     * void rs2_playback_device_pause(const rs2_device* device, rs2_error** error);
     * }
     */
    public static void rs2_playback_device_pause(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_playback_device_pause$MH();
        try {
            mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_device_set_real_time$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$1,"rs2_playback_device_set_real_time");
    }
    /**
     * {@snippet :
     * void rs2_playback_device_set_real_time(const rs2_device* device, int real_time, rs2_error** error);
     * }
     */
    public static void rs2_playback_device_set_real_time(MemorySegment device, int real_time, MemorySegment error) {
        var mh$ = rs2_playback_device_set_real_time$MH();
        try {
            mh$.invokeExact(device, real_time, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_device_is_real_time$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$2,"rs2_playback_device_is_real_time");
    }
    /**
     * {@snippet :
     * int rs2_playback_device_is_real_time(const rs2_device* device, rs2_error** error);
     * }
     */
    public static int rs2_playback_device_is_real_time(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_playback_device_is_real_time$MH();
        try {
            return (int)mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_device_set_status_changed_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$3,"rs2_playback_device_set_status_changed_callback");
    }
    /**
     * {@snippet :
     * void rs2_playback_device_set_status_changed_callback(const rs2_device* device, rs2_playback_status_changed_callback* callback, rs2_error** error);
     * }
     */
    public static void rs2_playback_device_set_status_changed_callback(MemorySegment device, MemorySegment callback, MemorySegment error) {
        var mh$ = rs2_playback_device_set_status_changed_callback$MH();
        try {
            mh$.invokeExact(device, callback, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_device_get_current_status$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$4,"rs2_playback_device_get_current_status");
    }
    /**
     * {@snippet :
     * rs2_playback_status rs2_playback_device_get_current_status(const rs2_device* device, rs2_error** error);
     * }
     */
    public static int rs2_playback_device_get_current_status(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_playback_device_get_current_status$MH();
        try {
            return (int)mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_device_set_playback_speed$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$6,"rs2_playback_device_set_playback_speed");
    }
    /**
     * {@snippet :
     * void rs2_playback_device_set_playback_speed(const rs2_device* device, float speed, rs2_error** error);
     * }
     */
    public static void rs2_playback_device_set_playback_speed(MemorySegment device, float speed, MemorySegment error) {
        var mh$ = rs2_playback_device_set_playback_speed$MH();
        try {
            mh$.invokeExact(device, speed, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_playback_device_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$0,"rs2_playback_device_stop");
    }
    /**
     * {@snippet :
     * void rs2_playback_device_stop(const rs2_device* device, rs2_error** error);
     * }
     */
    public static void rs2_playback_device_stop(MemorySegment device, MemorySegment error) {
        var mh$ = rs2_playback_device_stop$MH();
        try {
            mh$.invokeExact(device, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_raw_data_size$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$1,"rs2_get_raw_data_size");
    }
    /**
     * {@snippet :
     * int rs2_get_raw_data_size(const rs2_raw_data_buffer* buffer, rs2_error** error);
     * }
     */
    public static int rs2_get_raw_data_size(MemorySegment buffer, MemorySegment error) {
        var mh$ = rs2_get_raw_data_size$MH();
        try {
            return (int)mh$.invokeExact(buffer, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_delete_raw_data$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$2,"rs2_delete_raw_data");
    }
    /**
     * {@snippet :
     * void rs2_delete_raw_data(const rs2_raw_data_buffer* buffer);
     * }
     */
    public static void rs2_delete_raw_data(MemorySegment buffer) {
        var mh$ = rs2_delete_raw_data$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_raw_data$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$3,"rs2_get_raw_data");
    }
    /**
     * {@snippet :
     * unsigned char* rs2_get_raw_data(const rs2_raw_data_buffer* buffer, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_raw_data(MemorySegment buffer, MemorySegment error) {
        var mh$ = rs2_get_raw_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_api_version$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$4,"rs2_get_api_version");
    }
    /**
     * {@snippet :
     * int rs2_get_api_version(rs2_error** error);
     * }
     */
    public static int rs2_get_api_version(MemorySegment error) {
        var mh$ = rs2_get_api_version$MH();
        try {
            return (int)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_log_to_console$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$5,"rs2_log_to_console");
    }
    /**
     * {@snippet :
     * void rs2_log_to_console(rs2_log_severity min_severity, rs2_error** error);
     * }
     */
    public static void rs2_log_to_console(int min_severity, MemorySegment error) {
        var mh$ = rs2_log_to_console$MH();
        try {
            mh$.invokeExact(min_severity, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_log_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$0,"rs2_log_to_file");
    }
    /**
     * {@snippet :
     * void rs2_log_to_file(rs2_log_severity min_severity, char* file_path, rs2_error** error);
     * }
     */
    public static void rs2_log_to_file(int min_severity, MemorySegment file_path, MemorySegment error) {
        var mh$ = rs2_log_to_file$MH();
        try {
            mh$.invokeExact(min_severity, file_path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_log_to_callback_cpp$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$1,"rs2_log_to_callback_cpp");
    }
    /**
     * {@snippet :
     * void rs2_log_to_callback_cpp(rs2_log_severity min_severity, rs2_log_callback* callback, rs2_error** error);
     * }
     */
    public static void rs2_log_to_callback_cpp(int min_severity, MemorySegment callback, MemorySegment error) {
        var mh$ = rs2_log_to_callback_cpp$MH();
        try {
            mh$.invokeExact(min_severity, callback, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_log_to_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$3,"rs2_log_to_callback");
    }
    /**
     * {@snippet :
     * void rs2_log_to_callback(rs2_log_severity min_severity, rs2_log_callback_ptr callback, void* arg, rs2_error** error);
     * }
     */
    public static void rs2_log_to_callback(int min_severity, MemorySegment callback, MemorySegment arg, MemorySegment error) {
        var mh$ = rs2_log_to_callback$MH();
        try {
            mh$.invokeExact(min_severity, callback, arg, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_reset_logger$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$4,"rs2_reset_logger");
    }
    /**
     * {@snippet :
     * void rs2_reset_logger(rs2_error** error);
     * }
     */
    public static void rs2_reset_logger(MemorySegment error) {
        var mh$ = rs2_reset_logger$MH();
        try {
            mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_enable_rolling_log_file$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$5,"rs2_enable_rolling_log_file");
    }
    /**
     * {@snippet :
     * void rs2_enable_rolling_log_file(unsigned int max_size, rs2_error** error);
     * }
     */
    public static void rs2_enable_rolling_log_file(int max_size, MemorySegment error) {
        var mh$ = rs2_enable_rolling_log_file$MH();
        try {
            mh$.invokeExact(max_size, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_log_message_line_number$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$0,"rs2_get_log_message_line_number");
    }
    /**
     * {@snippet :
     * unsigned int rs2_get_log_message_line_number(const rs2_log_message* msg, rs2_error** error);
     * }
     */
    public static int rs2_get_log_message_line_number(MemorySegment msg, MemorySegment error) {
        var mh$ = rs2_get_log_message_line_number$MH();
        try {
            return (int)mh$.invokeExact(msg, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_log_message_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$1,"rs2_get_log_message_filename");
    }
    /**
     * {@snippet :
     * char* rs2_get_log_message_filename(const rs2_log_message* msg, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_log_message_filename(MemorySegment msg, MemorySegment error) {
        var mh$ = rs2_get_log_message_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(msg, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_raw_log_message$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$2,"rs2_get_raw_log_message");
    }
    /**
     * {@snippet :
     * char* rs2_get_raw_log_message(const rs2_log_message* msg, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_raw_log_message(MemorySegment msg, MemorySegment error) {
        var mh$ = rs2_get_raw_log_message$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(msg, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_full_log_message$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$3,"rs2_get_full_log_message");
    }
    /**
     * {@snippet :
     * char* rs2_get_full_log_message(const rs2_log_message* msg, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_get_full_log_message(MemorySegment msg, MemorySegment error) {
        var mh$ = rs2_get_full_log_message$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(msg, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_log$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$4,"rs2_log");
    }
    /**
     * {@snippet :
     * void rs2_log(rs2_log_severity severity, char* message, rs2_error** error);
     * }
     */
    public static void rs2_log(int severity, MemorySegment message, MemorySegment error) {
        var mh$ = rs2_log$MH();
        try {
            mh$.invokeExact(severity, message, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_depth_frame_get_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$6,"rs2_depth_frame_get_distance");
    }
    /**
     * {@snippet :
     * float rs2_depth_frame_get_distance(const rs2_frame* frame_ref, int x, int y, rs2_error** error);
     * }
     */
    public static float rs2_depth_frame_get_distance(MemorySegment frame_ref, int x, int y, MemorySegment error) {
        var mh$ = rs2_depth_frame_get_distance$MH();
        try {
            return (float)mh$.invokeExact(frame_ref, x, y, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_get_time$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$0,"rs2_get_time");
    }
    /**
     * {@snippet :
     * rs2_time_t rs2_get_time(rs2_error** error);
     * }
     */
    public static double rs2_get_time(MemorySegment error) {
        var mh$ = rs2_get_time$MH();
        try {
            return (double)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_config$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$1,"rs2_create_config");
    }
    /**
     * {@snippet :
     * rs2_config* rs2_create_config(rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_config(MemorySegment error) {
        var mh$ = rs2_create_config$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_delete_config$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$2,"rs2_delete_config");
    }
    /**
     * {@snippet :
     * void rs2_delete_config(rs2_config* config);
     * }
     */
    public static void rs2_delete_config(MemorySegment config) {
        var mh$ = rs2_delete_config$MH();
        try {
            mh$.invokeExact(config);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_enable_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$4,"rs2_config_enable_stream");
    }
    /**
     * {@snippet :
     * void rs2_config_enable_stream(rs2_config* config, rs2_stream stream, int index, int width, int height, rs2_format format, int framerate, rs2_error** error);
     * }
     */
    public static void rs2_config_enable_stream(MemorySegment config, int stream, int index, int width, int height, int format, int framerate, MemorySegment error) {
        var mh$ = rs2_config_enable_stream$MH();
        try {
            mh$.invokeExact(config, stream, index, width, height, format, framerate, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_enable_all_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$5,"rs2_config_enable_all_stream");
    }
    /**
     * {@snippet :
     * void rs2_config_enable_all_stream(rs2_config* config, rs2_error** error);
     * }
     */
    public static void rs2_config_enable_all_stream(MemorySegment config, MemorySegment error) {
        var mh$ = rs2_config_enable_all_stream$MH();
        try {
            mh$.invokeExact(config, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_enable_device$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$0,"rs2_config_enable_device");
    }
    /**
     * {@snippet :
     * void rs2_config_enable_device(rs2_config* config, char* serial, rs2_error** error);
     * }
     */
    public static void rs2_config_enable_device(MemorySegment config, MemorySegment serial, MemorySegment error) {
        var mh$ = rs2_config_enable_device$MH();
        try {
            mh$.invokeExact(config, serial, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_enable_device_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$1,"rs2_config_enable_device_from_file");
    }
    /**
     * {@snippet :
     * void rs2_config_enable_device_from_file(rs2_config* config, char* file, rs2_error** error);
     * }
     */
    public static void rs2_config_enable_device_from_file(MemorySegment config, MemorySegment file, MemorySegment error) {
        var mh$ = rs2_config_enable_device_from_file$MH();
        try {
            mh$.invokeExact(config, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_enable_device_from_file_repeat_option$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$2,"rs2_config_enable_device_from_file_repeat_option");
    }
    /**
     * {@snippet :
     * void rs2_config_enable_device_from_file_repeat_option(rs2_config* config, char* file, int repeat_playback, rs2_error** error);
     * }
     */
    public static void rs2_config_enable_device_from_file_repeat_option(MemorySegment config, MemorySegment file, int repeat_playback, MemorySegment error) {
        var mh$ = rs2_config_enable_device_from_file_repeat_option$MH();
        try {
            mh$.invokeExact(config, file, repeat_playback, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_enable_record_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$3,"rs2_config_enable_record_to_file");
    }
    /**
     * {@snippet :
     * void rs2_config_enable_record_to_file(rs2_config* config, char* file, rs2_error** error);
     * }
     */
    public static void rs2_config_enable_record_to_file(MemorySegment config, MemorySegment file, MemorySegment error) {
        var mh$ = rs2_config_enable_record_to_file$MH();
        try {
            mh$.invokeExact(config, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_disable_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$4,"rs2_config_disable_stream");
    }
    /**
     * {@snippet :
     * void rs2_config_disable_stream(rs2_config* config, rs2_stream stream, rs2_error** error);
     * }
     */
    public static void rs2_config_disable_stream(MemorySegment config, int stream, MemorySegment error) {
        var mh$ = rs2_config_disable_stream$MH();
        try {
            mh$.invokeExact(config, stream, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_disable_indexed_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$6,"rs2_config_disable_indexed_stream");
    }
    /**
     * {@snippet :
     * void rs2_config_disable_indexed_stream(rs2_config* config, rs2_stream stream, int index, rs2_error** error);
     * }
     */
    public static void rs2_config_disable_indexed_stream(MemorySegment config, int stream, int index, MemorySegment error) {
        var mh$ = rs2_config_disable_indexed_stream$MH();
        try {
            mh$.invokeExact(config, stream, index, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_disable_all_streams$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$0,"rs2_config_disable_all_streams");
    }
    /**
     * {@snippet :
     * void rs2_config_disable_all_streams(rs2_config* config, rs2_error** error);
     * }
     */
    public static void rs2_config_disable_all_streams(MemorySegment config, MemorySegment error) {
        var mh$ = rs2_config_disable_all_streams$MH();
        try {
            mh$.invokeExact(config, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_resolve$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$1,"rs2_config_resolve");
    }
    /**
     * {@snippet :
     * rs2_pipeline_profile* rs2_config_resolve(rs2_config* config, rs2_pipeline* pipe, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_config_resolve(MemorySegment config, MemorySegment pipe, MemorySegment error) {
        var mh$ = rs2_config_resolve$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(config, pipe, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_config_can_resolve$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$2,"rs2_config_can_resolve");
    }
    /**
     * {@snippet :
     * int rs2_config_can_resolve(rs2_config* config, rs2_pipeline* pipe, rs2_error** error);
     * }
     */
    public static int rs2_config_can_resolve(MemorySegment config, MemorySegment pipe, MemorySegment error) {
        var mh$ = rs2_config_can_resolve$MH();
        try {
            return (int)mh$.invokeExact(config, pipe, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_create_pipeline$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$3,"rs2_create_pipeline");
    }
    /**
     * {@snippet :
     * rs2_pipeline* rs2_create_pipeline(rs2_context* ctx, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_create_pipeline(MemorySegment ctx, MemorySegment error) {
        var mh$ = rs2_create_pipeline$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ctx, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$4,"rs2_pipeline_stop");
    }
    /**
     * {@snippet :
     * void rs2_pipeline_stop(rs2_pipeline* pipe, rs2_error** error);
     * }
     */
    public static void rs2_pipeline_stop(MemorySegment pipe, MemorySegment error) {
        var mh$ = rs2_pipeline_stop$MH();
        try {
            mh$.invokeExact(pipe, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_wait_for_frames$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$5,"rs2_pipeline_wait_for_frames");
    }
    /**
     * {@snippet :
     * rs2_frame* rs2_pipeline_wait_for_frames(rs2_pipeline* pipe, unsigned int timeout_ms, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_wait_for_frames(MemorySegment pipe, int timeout_ms, MemorySegment error) {
        var mh$ = rs2_pipeline_wait_for_frames$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pipe, timeout_ms, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_poll_for_frames$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$0,"rs2_pipeline_poll_for_frames");
    }
    /**
     * {@snippet :
     * int rs2_pipeline_poll_for_frames(rs2_pipeline* pipe, rs2_frame** output_frame, rs2_error** error);
     * }
     */
    public static int rs2_pipeline_poll_for_frames(MemorySegment pipe, MemorySegment output_frame, MemorySegment error) {
        var mh$ = rs2_pipeline_poll_for_frames$MH();
        try {
            return (int)mh$.invokeExact(pipe, output_frame, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_try_wait_for_frames$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$1,"rs2_pipeline_try_wait_for_frames");
    }
    /**
     * {@snippet :
     * int rs2_pipeline_try_wait_for_frames(rs2_pipeline* pipe, rs2_frame** output_frame, unsigned int timeout_ms, rs2_error** error);
     * }
     */
    public static int rs2_pipeline_try_wait_for_frames(MemorySegment pipe, MemorySegment output_frame, int timeout_ms, MemorySegment error) {
        var mh$ = rs2_pipeline_try_wait_for_frames$MH();
        try {
            return (int)mh$.invokeExact(pipe, output_frame, timeout_ms, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_delete_pipeline$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$2,"rs2_delete_pipeline");
    }
    /**
     * {@snippet :
     * void rs2_delete_pipeline(rs2_pipeline* pipe);
     * }
     */
    public static void rs2_delete_pipeline(MemorySegment pipe) {
        var mh$ = rs2_delete_pipeline$MH();
        try {
            mh$.invokeExact(pipe);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_start$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$3,"rs2_pipeline_start");
    }
    /**
     * {@snippet :
     * rs2_pipeline_profile* rs2_pipeline_start(rs2_pipeline* pipe, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_start(MemorySegment pipe, MemorySegment error) {
        var mh$ = rs2_pipeline_start$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pipe, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_start_with_config$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$4,"rs2_pipeline_start_with_config");
    }
    /**
     * {@snippet :
     * rs2_pipeline_profile* rs2_pipeline_start_with_config(rs2_pipeline* pipe, rs2_config* config, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_start_with_config(MemorySegment pipe, MemorySegment config, MemorySegment error) {
        var mh$ = rs2_pipeline_start_with_config$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pipe, config, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_start_with_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$5,"rs2_pipeline_start_with_callback");
    }
    /**
     * {@snippet :
     * rs2_pipeline_profile* rs2_pipeline_start_with_callback(rs2_pipeline* pipe, rs2_frame_callback_ptr on_frame, void* user, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_start_with_callback(MemorySegment pipe, MemorySegment on_frame, MemorySegment user, MemorySegment error) {
        var mh$ = rs2_pipeline_start_with_callback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pipe, on_frame, user, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_start_with_callback_cpp$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$0,"rs2_pipeline_start_with_callback_cpp");
    }
    /**
     * {@snippet :
     * rs2_pipeline_profile* rs2_pipeline_start_with_callback_cpp(rs2_pipeline* pipe, rs2_frame_callback* callback, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_start_with_callback_cpp(MemorySegment pipe, MemorySegment callback, MemorySegment error) {
        var mh$ = rs2_pipeline_start_with_callback_cpp$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pipe, callback, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_start_with_config_and_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$2,"rs2_pipeline_start_with_config_and_callback");
    }
    /**
     * {@snippet :
     * rs2_pipeline_profile* rs2_pipeline_start_with_config_and_callback(rs2_pipeline* pipe, rs2_config* config, rs2_frame_callback_ptr on_frame, void* user, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_start_with_config_and_callback(MemorySegment pipe, MemorySegment config, MemorySegment on_frame, MemorySegment user, MemorySegment error) {
        var mh$ = rs2_pipeline_start_with_config_and_callback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pipe, config, on_frame, user, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_start_with_config_and_callback_cpp$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$3,"rs2_pipeline_start_with_config_and_callback_cpp");
    }
    /**
     * {@snippet :
     * rs2_pipeline_profile* rs2_pipeline_start_with_config_and_callback_cpp(rs2_pipeline* pipe, rs2_config* config, rs2_frame_callback* callback, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_start_with_config_and_callback_cpp(MemorySegment pipe, MemorySegment config, MemorySegment callback, MemorySegment error) {
        var mh$ = rs2_pipeline_start_with_config_and_callback_cpp$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pipe, config, callback, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_get_active_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$4,"rs2_pipeline_get_active_profile");
    }
    /**
     * {@snippet :
     * rs2_pipeline_profile* rs2_pipeline_get_active_profile(rs2_pipeline* pipe, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_get_active_profile(MemorySegment pipe, MemorySegment error) {
        var mh$ = rs2_pipeline_get_active_profile$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pipe, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_profile_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$5,"rs2_pipeline_profile_get_device");
    }
    /**
     * {@snippet :
     * rs2_device* rs2_pipeline_profile_get_device(rs2_pipeline_profile* profile, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_profile_get_device(MemorySegment profile, MemorySegment error) {
        var mh$ = rs2_pipeline_profile_get_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(profile, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_pipeline_profile_get_streams$MH() {
        return RuntimeHelper.requireNonNull(constants$155.const$0,"rs2_pipeline_profile_get_streams");
    }
    /**
     * {@snippet :
     * rs2_stream_profile_list* rs2_pipeline_profile_get_streams(rs2_pipeline_profile* profile, rs2_error** error);
     * }
     */
    public static MemorySegment rs2_pipeline_profile_get_streams(MemorySegment profile, MemorySegment error) {
        var mh$ = rs2_pipeline_profile_get_streams$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(profile, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rs2_delete_pipeline_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$155.const$1,"rs2_delete_pipeline_profile");
    }
    /**
     * {@snippet :
     * void rs2_delete_pipeline_profile(rs2_pipeline_profile* profile);
     * }
     */
    public static void rs2_delete_pipeline_profile(MemorySegment profile) {
        var mh$ = rs2_delete_pipeline_profile$MH();
        try {
            mh$.invokeExact(profile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define _POSIX_C_SOURCE 200809
     * }
     */
    public static long _POSIX_C_SOURCE() {
        return 200809L;
    }
    /**
     * {@snippet :
     * #define __STDC_ISO_10646__ 201706
     * }
     */
    public static long __STDC_ISO_10646__() {
        return 201706L;
    }
    /**
     * {@snippet :
     * #define NULL 0
     * }
     */
    public static MemorySegment NULL() {
        return constants$155.const$2;
    }
    /**
     * {@snippet :
     * #define __WCLONE 2147483648
     * }
     */
    public static int __WCLONE() {
        return (int)2147483648L;
    }
    /**
     * {@snippet :
     * #define __HAVE_DISTINCT_FLOAT16 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT16() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_DISTINCT_FLOAT128X 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT128X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOAT128_UNLIKE_LDBL 0
     * }
     */
    public static int __HAVE_FLOAT128_UNLIKE_LDBL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __TIMESIZE 64
     * }
     */
    public static int __TIMESIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define __BYTE_ORDER 1234
     * }
     */
    public static int __BYTE_ORDER() {
        return (int)1234L;
    }
    /**
     * {@snippet :
     * #define __FLOAT_WORD_ORDER 1234
     * }
     */
    public static int __FLOAT_WORD_ORDER() {
        return (int)1234L;
    }
    /**
     * {@snippet :
     * #define LITTLE_ENDIAN 1234
     * }
     */
    public static int LITTLE_ENDIAN() {
        return (int)1234L;
    }
    /**
     * {@snippet :
     * #define BIG_ENDIAN 4321
     * }
     */
    public static int BIG_ENDIAN() {
        return (int)4321L;
    }
    /**
     * {@snippet :
     * #define PDP_ENDIAN 3412
     * }
     */
    public static int PDP_ENDIAN() {
        return (int)3412L;
    }
    /**
     * {@snippet :
     * #define BYTE_ORDER 1234
     * }
     */
    public static int BYTE_ORDER() {
        return (int)1234L;
    }
    /**
     * {@snippet :
     * #define __FD_ZERO_STOS "stosq"
     * }
     */
    public static MemorySegment __FD_ZERO_STOS() {
        return constants$155.const$3;
    }
    /**
     * {@snippet :
     * #define _SIGSET_NWORDS 16
     * }
     */
    public static long _SIGSET_NWORDS() {
        return 16L;
    }
    /**
     * {@snippet :
     * #define __NFDBITS 64
     * }
     */
    public static int __NFDBITS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define FD_SETSIZE 1024
     * }
     */
    public static int FD_SETSIZE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define NFDBITS 64
     * }
     */
    public static int NFDBITS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define __PTHREAD_RWLOCK_ELISION_EXTRA 0
     * }
     */
    public static int __PTHREAD_RWLOCK_ELISION_EXTRA() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __WCHAR_MAX 2147483647
     * }
     */
    public static int __WCHAR_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define __WCHAR_MIN -2147483648
     * }
     */
    public static int __WCHAR_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT8_MIN -128
     * }
     */
    public static int INT8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT16_MIN -32768
     * }
     */
    public static int INT16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT32_MIN -2147483648
     * }
     */
    public static int INT32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT64_MIN -9223372036854775808
     * }
     */
    public static long INT64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT8_MAX 127
     * }
     */
    public static int INT8_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define INT16_MAX 32767
     * }
     */
    public static int INT16_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define INT32_MAX 2147483647
     * }
     */
    public static int INT32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT64_MAX 9223372036854775807
     * }
     */
    public static long INT64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT8_MAX 255
     * }
     */
    public static int UINT8_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define UINT16_MAX 65535
     * }
     */
    public static int UINT16_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define UINT32_MAX 4294967295
     * }
     */
    public static int UINT32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT64_MAX -1
     * }
     */
    public static long UINT64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MIN -128
     * }
     */
    public static int INT_LEAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MIN -32768
     * }
     */
    public static int INT_LEAST16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MIN -2147483648
     * }
     */
    public static int INT_LEAST32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_LEAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MAX 127
     * }
     */
    public static int INT_LEAST8_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MAX 32767
     * }
     */
    public static int INT_LEAST16_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MAX 2147483647
     * }
     */
    public static int INT_LEAST32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_LEAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST8_MAX 255
     * }
     */
    public static int UINT_LEAST8_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST16_MAX 65535
     * }
     */
    public static int UINT_LEAST16_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST32_MAX 4294967295
     * }
     */
    public static int UINT_LEAST32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST64_MAX -1
     * }
     */
    public static long UINT_LEAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MIN -128
     * }
     */
    public static int INT_FAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST16_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST32_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MAX 127
     * }
     */
    public static int INT_FAST8_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST16_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST32_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST8_MAX 255
     * }
     */
    public static int UINT_FAST8_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST16_MAX -1
     * }
     */
    public static long UINT_FAST16_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST32_MAX -1
     * }
     */
    public static long UINT_FAST32_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST64_MAX -1
     * }
     */
    public static long UINT_FAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MIN -9223372036854775808
     * }
     */
    public static long INTPTR_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MAX 9223372036854775807
     * }
     */
    public static long INTPTR_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINTPTR_MAX -1
     * }
     */
    public static long UINTPTR_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MIN -9223372036854775808
     * }
     */
    public static long INTMAX_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MAX 9223372036854775807
     * }
     */
    public static long INTMAX_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINTMAX_MAX -1
     * }
     */
    public static long UINTMAX_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MIN -9223372036854775808
     * }
     */
    public static long PTRDIFF_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MAX 9223372036854775807
     * }
     */
    public static long PTRDIFF_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MIN -2147483648
     * }
     */
    public static int SIG_ATOMIC_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MAX 2147483647
     * }
     */
    public static int SIG_ATOMIC_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MIN -2147483648
     * }
     */
    public static int WCHAR_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MAX 2147483647
     * }
     */
    public static int WCHAR_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define WINT_MIN 0
     * }
     */
    public static int WINT_MIN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINT_MAX 4294967295
     * }
     */
    public static int WINT_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define HUGE_VAL Infinity
     * }
     */
    public static double HUGE_VAL() {
        return Double.valueOf("Infinity");
    }
    /**
     * {@snippet :
     * #define HUGE_VALF Infinity
     * }
     */
    public static float HUGE_VALF() {
        return Float.valueOf("Infinity");
    }
    /**
     * {@snippet :
     * #define INFINITY Infinity
     * }
     */
    public static float INFINITY() {
        return Float.valueOf("Infinity");
    }
    /**
     * {@snippet :
     * #define NAN NaN
     * }
     */
    public static float NAN() {
        return Float.valueOf("NaN");
    }
    /**
     * {@snippet :
     * #define __GLIBC_FLT_EVAL_METHOD 0
     * }
     */
    public static int __GLIBC_FLT_EVAL_METHOD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FP_ILOGB0 -2147483648
     * }
     */
    public static int FP_ILOGB0() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define FP_ILOGBNAN -2147483648
     * }
     */
    public static int FP_ILOGBNAN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define math_errhandling 3
     * }
     */
    public static int math_errhandling() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define M_E 2.718281828459045
     * }
     */
    public static double M_E() {
        return 2.718281828459045d;
    }
    /**
     * {@snippet :
     * #define M_LOG2E 1.4426950408889634
     * }
     */
    public static double M_LOG2E() {
        return 1.4426950408889634d;
    }
    /**
     * {@snippet :
     * #define M_LOG10E 0.4342944819032518
     * }
     */
    public static double M_LOG10E() {
        return 0.4342944819032518d;
    }
    /**
     * {@snippet :
     * #define M_LN2 0.6931471805599453
     * }
     */
    public static double M_LN2() {
        return 0.6931471805599453d;
    }
    /**
     * {@snippet :
     * #define M_LN10 2.302585092994046
     * }
     */
    public static double M_LN10() {
        return 2.302585092994046d;
    }
    /**
     * {@snippet :
     * #define M_PI 3.141592653589793
     * }
     */
    public static double M_PI() {
        return 3.141592653589793d;
    }
    /**
     * {@snippet :
     * #define M_PI_2 1.5707963267948966
     * }
     */
    public static double M_PI_2() {
        return 1.5707963267948966d;
    }
    /**
     * {@snippet :
     * #define M_PI_4 0.7853981633974483
     * }
     */
    public static double M_PI_4() {
        return 0.7853981633974483d;
    }
    /**
     * {@snippet :
     * #define M_1_PI 0.3183098861837907
     * }
     */
    public static double M_1_PI() {
        return 0.3183098861837907d;
    }
    /**
     * {@snippet :
     * #define M_2_PI 0.6366197723675814
     * }
     */
    public static double M_2_PI() {
        return 0.6366197723675814d;
    }
    /**
     * {@snippet :
     * #define M_2_SQRTPI 1.1283791670955126
     * }
     */
    public static double M_2_SQRTPI() {
        return 1.1283791670955126d;
    }
    /**
     * {@snippet :
     * #define M_SQRT2 1.4142135623730951
     * }
     */
    public static double M_SQRT2() {
        return 1.4142135623730951d;
    }
    /**
     * {@snippet :
     * #define M_SQRT1_2 0.7071067811865476
     * }
     */
    public static double M_SQRT1_2() {
        return 0.7071067811865476d;
    }
    /**
     * {@snippet :
     * #define FLT_EVAL_METHOD 0
     * }
     */
    public static int FLT_EVAL_METHOD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FLT_RADIX 2
     * }
     */
    public static int FLT_RADIX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FLT_MANT_DIG 24
     * }
     */
    public static int FLT_MANT_DIG() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * #define DBL_MANT_DIG 53
     * }
     */
    public static int DBL_MANT_DIG() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * #define LDBL_MANT_DIG 64
     * }
     */
    public static int LDBL_MANT_DIG() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define DECIMAL_DIG 21
     * }
     */
    public static int DECIMAL_DIG() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define FLT_DIG 6
     * }
     */
    public static int FLT_DIG() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define DBL_DIG 15
     * }
     */
    public static int DBL_DIG() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define LDBL_DIG 18
     * }
     */
    public static int LDBL_DIG() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define FLT_MIN_EXP -125
     * }
     */
    public static int FLT_MIN_EXP() {
        return (int)-125L;
    }
    /**
     * {@snippet :
     * #define DBL_MIN_EXP -1021
     * }
     */
    public static int DBL_MIN_EXP() {
        return (int)-1021L;
    }
    /**
     * {@snippet :
     * #define LDBL_MIN_EXP -16381
     * }
     */
    public static int LDBL_MIN_EXP() {
        return (int)-16381L;
    }
    /**
     * {@snippet :
     * #define FLT_MIN_10_EXP -37
     * }
     */
    public static int FLT_MIN_10_EXP() {
        return (int)-37L;
    }
    /**
     * {@snippet :
     * #define DBL_MIN_10_EXP -307
     * }
     */
    public static int DBL_MIN_10_EXP() {
        return (int)-307L;
    }
    /**
     * {@snippet :
     * #define LDBL_MIN_10_EXP -4931
     * }
     */
    public static int LDBL_MIN_10_EXP() {
        return (int)-4931L;
    }
    /**
     * {@snippet :
     * #define FLT_MAX_EXP 128
     * }
     */
    public static int FLT_MAX_EXP() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define DBL_MAX_EXP 1024
     * }
     */
    public static int DBL_MAX_EXP() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define LDBL_MAX_EXP 16384
     * }
     */
    public static int LDBL_MAX_EXP() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define FLT_MAX_10_EXP 38
     * }
     */
    public static int FLT_MAX_10_EXP() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * #define DBL_MAX_10_EXP 308
     * }
     */
    public static int DBL_MAX_10_EXP() {
        return (int)308L;
    }
    /**
     * {@snippet :
     * #define LDBL_MAX_10_EXP 4932
     * }
     */
    public static int LDBL_MAX_10_EXP() {
        return (int)4932L;
    }
    /**
     * {@snippet :
     * #define FLT_MAX 3.4028234663852886E38
     * }
     */
    public static float FLT_MAX() {
        return 3.4028234663852886E38f;
    }
    /**
     * {@snippet :
     * #define DBL_MAX 1.7976931348623157E308
     * }
     */
    public static double DBL_MAX() {
        return 1.7976931348623157E308d;
    }
    /**
     * {@snippet :
     * #define FLT_EPSILON 1.1920928955078125E-7
     * }
     */
    public static float FLT_EPSILON() {
        return 1.1920928955078125E-7f;
    }
    /**
     * {@snippet :
     * #define DBL_EPSILON 2.220446049250313E-16
     * }
     */
    public static double DBL_EPSILON() {
        return 2.220446049250313E-16d;
    }
    /**
     * {@snippet :
     * #define FLT_MIN 1.1754943508222875E-38
     * }
     */
    public static float FLT_MIN() {
        return 1.1754943508222875E-38f;
    }
    /**
     * {@snippet :
     * #define DBL_MIN 2.2250738585072014E-308
     * }
     */
    public static double DBL_MIN() {
        return 2.2250738585072014E-308d;
    }
    /**
     * {@snippet :
     * #define FLT_TRUE_MIN 1.401298464324817E-45
     * }
     */
    public static float FLT_TRUE_MIN() {
        return 1.401298464324817E-45f;
    }
    /**
     * {@snippet :
     * #define DBL_TRUE_MIN 4.9E-324
     * }
     */
    public static double DBL_TRUE_MIN() {
        return 4.9E-324d;
    }
    /**
     * {@snippet :
     * #define FLT_DECIMAL_DIG 9
     * }
     */
    public static int FLT_DECIMAL_DIG() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define DBL_DECIMAL_DIG 17
     * }
     */
    public static int DBL_DECIMAL_DIG() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define LDBL_DECIMAL_DIG 21
     * }
     */
    public static int LDBL_DECIMAL_DIG() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define FLT_HAS_SUBNORM 1
     * }
     */
    public static int FLT_HAS_SUBNORM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define DBL_HAS_SUBNORM 1
     * }
     */
    public static int DBL_HAS_SUBNORM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define LDBL_HAS_SUBNORM 1
     * }
     */
    public static int LDBL_HAS_SUBNORM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RS2_PRODUCT_LINE_DEPTH 14
     * }
     */
    public static int RS2_PRODUCT_LINE_DEPTH() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define RS2_PRODUCT_LINE_TRACKING 16
     * }
     */
    public static int RS2_PRODUCT_LINE_TRACKING() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define RS2_API_VERSION 25301
     * }
     */
    public static int RS2_API_VERSION() {
        return (int)25301L;
    }
}


