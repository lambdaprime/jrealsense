// Generated by jextract

package id.jrealsense.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$28 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$28() {}
    static final FunctionDescriptor __fabs$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __fabs$MH = RuntimeHelper.downcallHandle(
        "__fabs",
        constants$28.__fabs$FUNC
    );
    static final FunctionDescriptor floor$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle floor$MH = RuntimeHelper.downcallHandle(
        "floor",
        constants$28.floor$FUNC
    );
    static final FunctionDescriptor __floor$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __floor$MH = RuntimeHelper.downcallHandle(
        "__floor",
        constants$28.__floor$FUNC
    );
    static final FunctionDescriptor fmod$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle fmod$MH = RuntimeHelper.downcallHandle(
        "fmod",
        constants$28.fmod$FUNC
    );
    static final FunctionDescriptor __fmod$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __fmod$MH = RuntimeHelper.downcallHandle(
        "__fmod",
        constants$28.__fmod$FUNC
    );
    static final FunctionDescriptor isinf$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle isinf$MH = RuntimeHelper.downcallHandle(
        "isinf",
        constants$28.isinf$FUNC
    );
}


