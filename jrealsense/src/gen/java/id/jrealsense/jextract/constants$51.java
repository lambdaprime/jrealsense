// Generated by jextract

package id.jrealsense.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$51 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$51() {}
    static final FunctionDescriptor __hypotf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __hypotf$MH = RuntimeHelper.downcallHandle(
        "__hypotf",
        constants$51.__hypotf$FUNC
    );
    static final FunctionDescriptor cbrtf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle cbrtf$MH = RuntimeHelper.downcallHandle(
        "cbrtf",
        constants$51.cbrtf$FUNC
    );
    static final FunctionDescriptor __cbrtf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __cbrtf$MH = RuntimeHelper.downcallHandle(
        "__cbrtf",
        constants$51.__cbrtf$FUNC
    );
    static final FunctionDescriptor ceilf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle ceilf$MH = RuntimeHelper.downcallHandle(
        "ceilf",
        constants$51.ceilf$FUNC
    );
    static final FunctionDescriptor __ceilf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __ceilf$MH = RuntimeHelper.downcallHandle(
        "__ceilf",
        constants$51.__ceilf$FUNC
    );
    static final FunctionDescriptor fabsf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle fabsf$MH = RuntimeHelper.downcallHandle(
        "fabsf",
        constants$51.fabsf$FUNC
    );
}


