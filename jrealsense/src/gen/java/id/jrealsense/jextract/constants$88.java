// Generated by jextract

package id.jrealsense.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$88 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$88() {}
    static final FunctionDescriptor rs2_update_firmware_unsigned_cpp$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_update_firmware_unsigned_cpp$MH = RuntimeHelper.downcallHandle(
        "rs2_update_firmware_unsigned_cpp",
        constants$88.rs2_update_firmware_unsigned_cpp$FUNC
    );
    static final FunctionDescriptor rs2_check_firmware_compatibility$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_check_firmware_compatibility$MH = RuntimeHelper.downcallHandle(
        "rs2_check_firmware_compatibility",
        constants$88.rs2_check_firmware_compatibility$FUNC
    );
    static final FunctionDescriptor rs2_update_firmware_unsigned$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_update_firmware_unsigned$MH = RuntimeHelper.downcallHandle(
        "rs2_update_firmware_unsigned",
        constants$88.rs2_update_firmware_unsigned$FUNC
    );
    static final FunctionDescriptor rs2_enter_update_state$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_enter_update_state$MH = RuntimeHelper.downcallHandle(
        "rs2_enter_update_state",
        constants$88.rs2_enter_update_state$FUNC
    );
    static final FunctionDescriptor rs2_run_on_chip_calibration_cpp$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_run_on_chip_calibration_cpp$MH = RuntimeHelper.downcallHandle(
        "rs2_run_on_chip_calibration_cpp",
        constants$88.rs2_run_on_chip_calibration_cpp$FUNC
    );
    static final FunctionDescriptor rs2_run_on_chip_calibration$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_run_on_chip_calibration$MH = RuntimeHelper.downcallHandle(
        "rs2_run_on_chip_calibration",
        constants$88.rs2_run_on_chip_calibration$FUNC
    );
}


