// Generated by jextract

package id.jrealsense.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$33 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$33() {}
    static final FunctionDescriptor erfc$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle erfc$MH = RuntimeHelper.downcallHandle(
        "erfc",
        constants$33.erfc$FUNC
    );
    static final FunctionDescriptor __erfc$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __erfc$MH = RuntimeHelper.downcallHandle(
        "__erfc",
        constants$33.__erfc$FUNC
    );
    static final FunctionDescriptor lgamma$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle lgamma$MH = RuntimeHelper.downcallHandle(
        "lgamma",
        constants$33.lgamma$FUNC
    );
    static final FunctionDescriptor __lgamma$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __lgamma$MH = RuntimeHelper.downcallHandle(
        "__lgamma",
        constants$33.__lgamma$FUNC
    );
    static final FunctionDescriptor tgamma$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle tgamma$MH = RuntimeHelper.downcallHandle(
        "tgamma",
        constants$33.tgamma$FUNC
    );
    static final FunctionDescriptor __tgamma$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __tgamma$MH = RuntimeHelper.downcallHandle(
        "__tgamma",
        constants$33.__tgamma$FUNC
    );
}


