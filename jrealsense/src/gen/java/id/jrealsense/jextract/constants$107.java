// Generated by jextract

package id.jrealsense.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$107 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$107() {}
    static final FunctionDescriptor rs2_create_sequence_id_filter$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_create_sequence_id_filter$MH = RuntimeHelper.downcallHandle(
        "rs2_create_sequence_id_filter",
        constants$107.rs2_create_sequence_id_filter$FUNC
    );
    static final FunctionDescriptor rs2_get_processing_block_info$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_get_processing_block_info$MH = RuntimeHelper.downcallHandle(
        "rs2_get_processing_block_info",
        constants$107.rs2_get_processing_block_info$FUNC
    );
    static final FunctionDescriptor rs2_supports_processing_block_info$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_supports_processing_block_info$MH = RuntimeHelper.downcallHandle(
        "rs2_supports_processing_block_info",
        constants$107.rs2_supports_processing_block_info$FUNC
    );
    static final FunctionDescriptor rs2_is_processing_block_extendable_to$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rs2_is_processing_block_extendable_to$MH = RuntimeHelper.downcallHandle(
        "rs2_is_processing_block_extendable_to",
        constants$107.rs2_is_processing_block_extendable_to$FUNC
    );
    static final FunctionDescriptor rs2_playback_status_to_string$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle rs2_playback_status_to_string$MH = RuntimeHelper.downcallHandle(
        "rs2_playback_status_to_string",
        constants$107.rs2_playback_status_to_string$FUNC
    );
    static final FunctionDescriptor rs2_playback_status_changed_callback_ptr$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final FunctionDescriptor rs2_playback_status_changed_callback_ptr_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle rs2_playback_status_changed_callback_ptr_UP$MH = RuntimeHelper.upcallHandle(rs2_playback_status_changed_callback_ptr.class, "apply", constants$107.rs2_playback_status_changed_callback_ptr_UP$FUNC);
}


