// Generated by jextract

package id.jrealsense.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$27 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$27() {}
    static final FunctionDescriptor __hypot$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __hypot$MH = RuntimeHelper.downcallHandle(
        "__hypot",
        constants$27.__hypot$FUNC
    );
    static final FunctionDescriptor cbrt$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle cbrt$MH = RuntimeHelper.downcallHandle(
        "cbrt",
        constants$27.cbrt$FUNC
    );
    static final FunctionDescriptor __cbrt$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __cbrt$MH = RuntimeHelper.downcallHandle(
        "__cbrt",
        constants$27.__cbrt$FUNC
    );
    static final FunctionDescriptor ceil$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle ceil$MH = RuntimeHelper.downcallHandle(
        "ceil",
        constants$27.ceil$FUNC
    );
    static final FunctionDescriptor __ceil$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __ceil$MH = RuntimeHelper.downcallHandle(
        "__ceil",
        constants$27.__ceil$FUNC
    );
    static final FunctionDescriptor fabs$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle fabs$MH = RuntimeHelper.downcallHandle(
        "fabs",
        constants$27.fabs$FUNC
    );
}


